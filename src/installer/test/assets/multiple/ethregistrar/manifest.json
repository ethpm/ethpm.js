{"contract_types":{"BaseRegistrar":{"abi":[{"constant":true,"inputs":[{"name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"name":"operator","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"},{"name":"owner","type":"address"}],"name":"reclaim","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"ens","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"transferPeriodEnds","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"resolver","type":"address"}],"name":"setResolver","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"name":"owner","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"uint256"}],"name":"available","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"operator","type":"address"},{"name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"controller","type":"address"}],"name":"addController","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"previousRegistrar","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"tokenId","type":"uint256"},{"name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"GRACE_PERIOD","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"},{"name":"duration","type":"uint256"}],"name":"renew","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"uint256"}],"name":"nameExpires","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"controllers","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"baseNode","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"},{"name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"label","type":"bytes32"},{"name":"deed","type":"address"},{"name":"","type":"uint256"}],"name":"acceptRegistrarTransfer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"controller","type":"address"}],"name":"removeController","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"},{"name":"owner","type":"address"},{"name":"duration","type":"uint256"}],"name":"register","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"controller","type":"address"}],"name":"ControllerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"controller","type":"address"}],"name":"ControllerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"uint256"},{"indexed":true,"name":"owner","type":"address"},{"indexed":false,"name":"expires","type":"uint256"}],"name":"NameMigrated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"uint256"},{"indexed":true,"name":"owner","type":"address"},{"indexed":false,"name":"expires","type":"uint256"}],"name":"NameRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"uint256"},{"indexed":false,"name":"expires","type":"uint256"}],"name":"NameRenewed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"approved","type":"address"},{"indexed":true,"name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"operator","type":"address"},{"indexed":false,"name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.5.10+commit.5a6ea5b1"},"deployment_bytecode":{"bytecode":"0x"},"natspec":{"methods":{"acceptRegistrarTransfer(bytes32,address,uint256)":{"details":"Transfers a registration from the initial registrar. This function is called by the initial registrar when a user calls `transferRegistrars`."},"balanceOf(address)":{"details":"Returns the number of NFTs in `owner`'s account."},"isOwner()":{"details":"Returns true if the caller is the current owner."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"Returns the owner of the NFT specified by `tokenId`."},"reclaim(uint256,address)":{"details":"Reclaim ownership of a name in ENS, if you own it in the registrar."},"register(uint256,address,uint256)":{"details":"Register a name."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"Transfers a specific NFT (`tokenId`) from one account (`from`) to another (`to`).     *      * Requirements: - `from`, `to` cannot be zero. - `tokenId` must be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this NFT by either `approve` or `setApproveForAll`."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created.     * This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers a specific NFT (`tokenId`) from one account (`from`) to another (`to`).     * Requirements: - If the caller is not `from`, it must be approved to move this NFT by either `approve` or `setApproveForAll`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"runtime_bytecode":{"bytecode":"0x"}},"BaseRegistrarImplementation":{"abi":[{"constant":true,"inputs":[{"name":"interfaceID","type":"bytes4"}],"name":"supportsInterface","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"},{"name":"owner","type":"address"}],"name":"reclaim","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"ens","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"transferPeriodEnds","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"resolver","type":"address"}],"name":"setResolver","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"MIGRATION_LOCK_PERIOD","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"uint256"}],"name":"available","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"controller","type":"address"}],"name":"addController","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"previousRegistrar","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"tokenId","type":"uint256"},{"name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"GRACE_PERIOD","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"},{"name":"duration","type":"uint256"}],"name":"renew","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"id","type":"uint256"}],"name":"nameExpires","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"controllers","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"baseNode","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"},{"name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"label","type":"bytes32"},{"name":"deed","type":"address"},{"name":"","type":"uint256"}],"name":"acceptRegistrarTransfer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"controller","type":"address"}],"name":"removeController","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"id","type":"uint256"},{"name":"owner","type":"address"},{"name":"duration","type":"uint256"}],"name":"register","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_ens","type":"address"},{"name":"_previousRegistrar","type":"address"},{"name":"_baseNode","type":"bytes32"},{"name":"_transferPeriodEnds","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"controller","type":"address"}],"name":"ControllerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"controller","type":"address"}],"name":"ControllerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"uint256"},{"indexed":true,"name":"owner","type":"address"},{"indexed":false,"name":"expires","type":"uint256"}],"name":"NameMigrated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"uint256"},{"indexed":true,"name":"owner","type":"address"},{"indexed":false,"name":"expires","type":"uint256"}],"name":"NameRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"uint256"},{"indexed":false,"name":"expires","type":"uint256"}],"name":"NameRenewed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":true,"name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"approved","type":"address"},{"indexed":true,"name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"operator","type":"address"},{"indexed":false,"name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.5.10+commit.5a6ea5b1"},"deployment_bytecode":{"bytecode":""},"natspec":{"methods":{"acceptRegistrarTransfer(bytes32,address,uint256)":{"details":"Transfers a registration from the initial registrar. This function is called by the initial registrar when a user calls `transferRegistrars`."},"approve(address,uint256)":{"details":"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.","params":{"to":"address to be approved for the given token ID","tokenId":"uint256 ID of the token to be approved"}},"balanceOf(address)":{"details":"Gets the balance of the specified address.","params":{"owner":"address to query the balance of"},"return":"uint256 representing the amount owned by the passed address"},"getApproved(uint256)":{"details":"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.","params":{"tokenId":"uint256 ID of the token to query the approval of"},"return":"address currently approved for the given token ID"},"isApprovedForAll(address,address)":{"details":"Tells whether an operator is approved by a given owner.","params":{"operator":"operator address which you want to query the approval of","owner":"owner address which you want to query the approval of"},"return":"bool whether the given operator is approved by the given owner"},"isOwner()":{"details":"Returns true if the caller is the current owner."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"Gets the owner of the specified token ID. Names become unowned     when their registration expires.","params":{"tokenId":"uint256 ID of the token to query the owner of"},"return":"address currently marked as the owner of the given token ID"},"reclaim(uint256,address)":{"details":"Reclaim ownership of a name in ENS, if you own it in the registrar."},"register(uint256,address,uint256)":{"details":"Register a name."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator","params":{"from":"current owner of the token","to":"address to receive the ownership of the given token ID","tokenId":"uint256 ID of the token to be transferred"}},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator","params":{"_data":"bytes data to send along with a safe transfer check","from":"current owner of the token","to":"address to receive the ownership of the given token ID","tokenId":"uint256 ID of the token to be transferred"}},"setApprovalForAll(address,bool)":{"details":"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.","params":{"approved":"representing the status of the approval to be set","to":"operator address to set the approval"}},"transferFrom(address,address,uint256)":{"details":"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.","params":{"from":"current owner of the token","to":"address to receive the ownership of the given token ID","tokenId":"uint256 ID of the token to be transferred"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"runtime_bytecode":{"bytecode":"0x608060405234801561001057600080fd5b50600436106101da5760003560e01c806396e494e811610104578063d6e4fa86116100a2578063ea9e107a11610071578063ea9e107a146109fb578063f2fde38b14610a53578063f6a74ed714610a97578063fca247ac14610adb576101da565b8063d6e4fa86146108c3578063da8c229e14610905578063ddf7fcb014610961578063e985e9c51461097f576101da565b8063ab14ec59116100de578063ab14ec591461070a578063b88d4fde14610754578063c1a287e214610859578063c475abff14610877576101da565b806396e494e814610630578063a22cb46514610676578063a7fc7a07146106c6576101da565b80634ae05da71161017c57806370a082311161014b57806370a0823114610562578063715018a6146105ba5780638da5cb5b146105c45780638f32d59b1461060e576101da565b80634ae05da7146104745780634e543b26146104925780636352211e146104d65780636b1bd1c514610544576101da565b806323b872dd116101b857806323b872dd1461030057806328ed4f6c1461036e5780633f15457f146103bc57806342842e0e14610406576101da565b806301ffc9a7146101df578063081812fc14610244578063095ea7b3146102b2575b600080fd5b61022a600480360360208110156101f557600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610b47565b604051808215151515815260200191505060405180910390f35b6102706004803603602081101561025a57600080fd5b8101908080359060200190929190505050610e04565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102fe600480360360408110156102c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e9f565b005b61036c6004803603606081101561031657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611078565b005b6103ba6004803603604081101561038457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110e7565b005b6103c46112b3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104726004803603606081101561041c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112d9565b005b61047c6112f9565b6040518082815260200191505060405180910390f35b6104d4600480360360208110156104a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112ff565b005b610502600480360360208110156104ec57600080fd5b810190808035906020019092919050505061143f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61054c611470565b6040518082815260200191505060405180910390f35b6105a46004803603602081101561057857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611477565b6040518082815260200191505060405180910390f35b6105c261154c565b005b6105cc611687565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106166116b1565b604051808215151515815260200191505060405180910390f35b61065c6004803603602081101561064657600080fd5b8101908080359060200190929190505050611709565b604051808215151515815260200191505060405180910390f35b6106c46004803603604081101561068c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611811565b005b610708600480360360208110156106dc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119b4565b005b610712611acc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108576004803603608081101561076a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156107d157600080fd5b8201836020820111156107e357600080fd5b8035906020019184600183028401116401000000008311171561080557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611af2565b005b610861611b64565b6040518082815260200191505060405180910390f35b6108ad6004803603604081101561088d57600080fd5b810190808035906020019092919080359060200190929190505050611b6b565b6040518082815260200191505060405180910390f35b6108ef600480360360208110156108d957600080fd5b8101908080359060200190929190505050611d82565b6040518082815260200191505060405180910390f35b6109476004803603602081101561091b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d9f565b604051808215151515815260200191505060405180910390f35b610969611dbf565b6040518082815260200191505060405180910390f35b6109e16004803603604081101561099557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dc5565b604051808215151515815260200191505060405180910390f35b610a5160048036036060811015610a1157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e59565b005b610a9560048036036020811015610a6957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612354565b005b610ad960048036036020811015610aad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123da565b005b610b3160048036036060811015610af157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506124f2565b6040518082815260200191505060405180910390f35b600060405180807f737570706f727473496e74657266616365286279746573342900000000000000815250601901905060405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610d80575060405180806136cf602f9139602f019050604051809103902060405180806135556029913960290190506040518091039020604051808061350a60259139602501905060405180910390206040518080613754602191396021019050604051809103902060405180807f736574417070726f76616c466f72416c6c28616464726573732c626f6f6c2900815250601f019050604051809103902060405180807f676574417070726f7665642875696e74323536290000000000000000000000008152506014019050604051809103902060405180807f617070726f766528616464726573732c75696e743235362900000000000000008152506018019050604051809103902060405180807f6f776e65724f662875696e7432353629000000000000000000000000000000008152506010019050604051809103902060405180807f62616c616e63654f662875696e743235362900000000000000000000000000008152506012019050604051809103902018181818181818187bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610dfd575060405180807f7265636c61696d2875696e743235362c61646472657373290000000000000000815250601801905060405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6000610e0f826127c2565b610e64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613659602c913960400191505060405180910390fd5b6008600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610eaa8261143f565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f31576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806136ae6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610f715750610f708133611dc5565b5b610fc6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806135ce6038913960400191505060405180910390fd5b826008600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6110823382612834565b6110d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806136fe6031913960400191505060405180910390fd5b6110e2838383612928565b505050565b3073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be36004546040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561117357600080fd5b505afa158015611187573d6000803e3d6000fd5b505050506040513d602081101561119d57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16146111ce57600080fd5b6111d83383612834565b6111e157600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59236004548460001b846040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b15801561129757600080fd5b505af11580156112ab573d6000803e3d6000fd5b505050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6112f483838360405180602001604052806000815250611af2565b505050565b60025481565b6113076116b1565b611379576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631896f70a600454836040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561142457600080fd5b505af1158015611438573d6000803e3d6000fd5b5050505050565b600042600b6000848152602001908152602001600020541161146057600080fd5b61146982612b83565b9050919050565b6224ea0081565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613606602a913960400191505060405180910390fd5b611545600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612c4b565b9050919050565b6115546116b1565b6115c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000426276a700600b6000858152602001908152602001600020540110611733576000905061180c565b60025442118061180957506000600581111561174b57fe5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166361d585da8460001b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156117c157600080fd5b505afa1580156117d5573d6000803e3d6000fd5b505050506040513d60208110156117eb57600080fd5b8101908080519060200190929190505050600581111561180757fe5b145b90505b919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6119bc6116b1565b611a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f0a8bb31534c0ed46f380cb867bd5c803a189ced9a764e30b3a4991a9901d747460405160405180910390a250565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611afd848484611078565b611b0984848484612c59565b611b5e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806134d86032913960400191505060405180910390fd5b50505050565b6276a70081565b60003073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be36004546040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611bf957600080fd5b505afa158015611c0d573d6000803e3d6000fd5b505050506040513d6020811015611c2357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614611c5457600080fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611caa57600080fd5b426276a700600b600086815260200190815260200160002054011015611ccf57600080fd5b6276a70082016276a70083600b600087815260200190815260200160002054010111611cfa57600080fd5b81600b600085815260200190815260200160002060008282540192505081905550827f9b87a00e30f1ac65d898f070f8a3488fe60517182d0a2098e1b4b93a54aa9bd6600b6000868152602001908152602001600020546040518082815260200191505060405180910390a2600b600084815260200190815260200160002054905092915050565b6000600b6000838152602001908152602001600020549050919050565b60066020528060005260406000206000915054906101000a900460ff1681565b60045481565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b3073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be36004546040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611ee557600080fd5b505afa158015611ef9573d6000803e3d6000fd5b505050506040513d6020811015611f0f57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614611f4057600080fd5b60008360001c9050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611fa257600080fd5b6000600b60008381526020019081526020016000205414611fc257600080fd5b4260025411611fd057600080fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663267b6922866040518263ffffffff1660e01b81526004018082815260200191505060a06040518083038186803b15801561204557600080fd5b505afa158015612059573d6000803e3d6000fd5b505050506040513d60a081101561206f57600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050909192935090919250905050809150506224ea00420381106120c957600080fd5b60008473ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561211157600080fd5b505afa158015612125573d6000803e3d6000fd5b505050506040513d602081101561213b57600080fd5b810190808051906020019092919050505090508473ffffffffffffffffffffffffffffffffffffffff1663bbe427716103e86040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156121a357600080fd5b505af11580156121b7573d6000803e3d6000fd5b50505050600254600b6000858152602001908152602001600020819055506121df8184612e42565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab592360045488846040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b15801561229257600080fd5b505af11580156122a6573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16837fea3d7e1195a15d2ddcd859b01abd4c6b960fa9f9264e499a70a90c7f0c64b7176002546040518082815260200191505060405180910390a38073ffffffffffffffffffffffffffffffffffffffff16837fb3d987963d01b2f68493b4bdb130988f157ea43070d4ad840fee0466ed9370d96002546040518082815260200191505060405180910390a3505050505050565b61235c6116b1565b6123ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6123d78161305a565b50565b6123e26116b1565b612454576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f33d83959be2573f5453b12eb9d43b3499bc57d96bd2f067ba44803c859e8111360405160405180910390a250565b60003073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be36004546040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561258057600080fd5b505afa158015612594573d6000803e3d6000fd5b505050506040513d60208110156125aa57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16146125db57600080fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661263157600080fd5b61263a84611709565b61264357600080fd5b6276a70042016276a700834201011161265b57600080fd5b814201600b60008681526020019081526020016000208190555061267e846127c2565b1561268d5761268c846131a0565b5b6126978385612e42565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59236004548660001b866040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b15801561274d57600080fd5b505af1158015612761573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16847fb3d987963d01b2f68493b4bdb130988f157ea43070d4ad840fee0466ed9370d98442016040518082815260200191505060405180910390a381420190509392505050565b6000806007600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600061283f826127c2565b612894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001806135a2602c913960400191505060405180910390fd5b600061289f8361143f565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061290e57508373ffffffffffffffffffffffffffffffffffffffff166128f684610e04565b73ffffffffffffffffffffffffffffffffffffffff16145b8061291f575061291e8185611dc5565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166129488261143f565b73ffffffffffffffffffffffffffffffffffffffff16146129b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806136856029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612a3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061357e6024913960400191505060405180910390fd5b612a43816131b5565b612a8a600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613273565b612ad1600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613296565b816007600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000806007600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612c42576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806136306029913960400191505060405180910390fd5b80915050919050565b600081600001549050919050565b6000612c7a8473ffffffffffffffffffffffffffffffffffffffff166132ac565b612c875760019050612e3a565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612d62578082015181840152602081019050612d47565b50505050905090810190601f168015612d8f5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612db157600080fd5b505af1158015612dc5573d6000803e3d6000fd5b505050506040513d6020811015612ddb57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612ee5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b612eee816127c2565b15612f61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816007600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612ffa600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613296565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156130e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061352f6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6131b26131ac8261143f565b826132bf565b50565b600073ffffffffffffffffffffffffffffffffffffffff166008600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146132705760006008600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b61328b6001826000015461344e90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600080823b905060008111915050919050565b8173ffffffffffffffffffffffffffffffffffffffff166132df8261143f565b73ffffffffffffffffffffffffffffffffffffffff161461334b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061372f6025913960400191505060405180910390fd5b613354816131b5565b61339b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613273565b60006007600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000828211156134c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b60008284039050809150509291505056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465727472616e7366657246726f6d28616464726573732c616464726573732c75696e74323536294f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373736166655472616e7366657246726f6d28616464726573732c616464726573732c75696e74323536294552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572736166655472616e7366657246726f6d28616464726573732c616464726573732c75696e743235362c6279746573294552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e6973417070726f766564466f72416c6c28616464726573732c6164647265737329a265627a7a72305820db8737f031f2ac2ba6b76093c91ca868ba156e8343748f0a8fa9aeeaaf6f43b664736f6c634300050a0032"}},"DummyOracle":{"abi":[{"constant":true,"inputs":[],"name":"read","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_value","type":"uint256"}],"name":"set","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_value","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.5.10+commit.5a6ea5b1"},"deployment_bytecode":{"bytecode":"0x608060405234801561001057600080fd5b5060405161013a38038061013a8339818101604052602081101561003357600080fd5b81019080805190602001909291905050506100538161005960201b60201c565b50610063565b8060008190555050565b60c9806100716000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806357de26a414603757806360fe47b1146053575b600080fd5b603d607e565b6040518082815260200191505060405180910390f35b607c60048036036020811015606757600080fd5b8101908080359060200190929190505050608a565b005b6000805460001b905090565b806000819055505056fea265627a7a72305820bc14af16ebeeb2a6780db188020827ea1905d85c884a02dc0039ab5ae1a8c75064736f6c634300050a0032"},"natspec":{"methods":{}},"runtime_bytecode":{"bytecode":"0x6080604052348015600f57600080fd5b506004361060325760003560e01c806357de26a414603757806360fe47b1146053575b600080fd5b603d607e565b6040518082815260200191505060405180910390f35b607c60048036036020811015606757600080fd5b8101908080359060200190929190505050608a565b005b6000805460001b905090565b806000819055505056fea265627a7a72305820bc14af16ebeeb2a6780db188020827ea1905d85c884a02dc0039ab5ae1a8c75064736f6c634300050a0032"}},"ETHRegistrarController":{"abi":[{"constant":true,"inputs":[{"name":"interfaceID","type":"bytes4"}],"name":"supportsInterface","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":false,"inputs":[],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_prices","type":"address"}],"name":"setPriceOracle","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_minCommitmentAge","type":"uint256"},{"name":"_maxCommitmentAge","type":"uint256"}],"name":"setCommitmentAges","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"commitments","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"duration","type":"uint256"}],"name":"rentPrice","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"owner","type":"address"},{"name":"duration","type":"uint256"},{"name":"secret","type":"bytes32"}],"name":"register","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"MIN_REGISTRATION_DURATION","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"minCommitmentAge","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"}],"name":"valid","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"duration","type":"uint256"}],"name":"renew","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"}],"name":"available","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"maxCommitmentAge","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"commitment","type":"bytes32"}],"name":"commit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"owner","type":"address"},{"name":"secret","type":"bytes32"}],"name":"makeCommitment","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"pure","type":"function"},{"inputs":[{"name":"_base","type":"address"},{"name":"_prices","type":"address"},{"name":"_minCommitmentAge","type":"uint256"},{"name":"_maxCommitmentAge","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"name","type":"string"},{"indexed":true,"name":"label","type":"bytes32"},{"indexed":true,"name":"owner","type":"address"},{"indexed":false,"name":"cost","type":"uint256"},{"indexed":false,"name":"expires","type":"uint256"}],"name":"NameRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"name","type":"string"},{"indexed":true,"name":"label","type":"bytes32"},{"indexed":false,"name":"cost","type":"uint256"},{"indexed":false,"name":"expires","type":"uint256"}],"name":"NameRenewed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"oracle","type":"address"}],"name":"NewPriceOracle","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.5.10+commit.5a6ea5b1"},"deployment_bytecode":{"bytecode":"0x608060405234801561001057600080fd5b50604051611e18380380611e188339818101604052608081101561003357600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a381811161012a57600080fd5b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816003819055508060048190555050505050611c4b806101cd6000396000f3fe6080604052600436106101145760003560e01c80638d839ffe116100a0578063aeb8ce9b11610064578063aeb8ce9b14610670578063ce1e09c014610750578063f14fcbc81461077b578063f2fde38b146107b6578063f49826be1461080757610114565b80638d839ffe1461045c5780638da5cb5b146104875780638f32d59b146104de5780639791c0971461050d578063acf1a841146105ed57610114565b80637e324479116100e75780637e3244791461020a578063839df9451461024f57806383e7f6ff1461029e57806385f6d155146103845780638a95b09f1461043157610114565b806301ffc9a7146101195780633ccfd60b1461018b578063530e784f146101a2578063715018a6146101f3575b600080fd5b34801561012557600080fd5b506101716004803603602081101561013c57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061090d565b604051808215151515815260200191505060405180910390f35b34801561019757600080fd5b506101a0610ae2565b005b3480156101ae57600080fd5b506101f1600480360360208110156101c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bbc565b005b3480156101ff57600080fd5b50610208610cdf565b005b34801561021657600080fd5b5061024d6004803603604081101561022d57600080fd5b810190808035906020019092919080359060200190929190505050610e18565b005b34801561025b57600080fd5b506102886004803603602081101561027257600080fd5b8101908080359060200190929190505050610ea4565b6040518082815260200191505060405180910390f35b3480156102aa57600080fd5b5061036e600480360360408110156102c157600080fd5b81019080803590602001906401000000008111156102de57600080fd5b8201836020820111156102f057600080fd5b8035906020019184600183028401116401000000008311171561031257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050610ebc565b6040518082815260200191505060405180910390f35b61042f6004803603608081101561039a57600080fd5b81019080803590602001906401000000008111156103b757600080fd5b8201836020820111156103c957600080fd5b803590602001918460018302840111640100000000831117156103eb57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506110a5565b005b34801561043d57600080fd5b50610446611419565b6040518082815260200191505060405180910390f35b34801561046857600080fd5b50610471611420565b6040518082815260200191505060405180910390f35b34801561049357600080fd5b5061049c611426565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104ea57600080fd5b506104f361144f565b604051808215151515815260200191505060405180910390f35b34801561051957600080fd5b506105d36004803603602081101561053057600080fd5b810190808035906020019064010000000081111561054d57600080fd5b82018360208201111561055f57600080fd5b8035906020019184600183028401116401000000008311171561058157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506114a6565b604051808215151515815260200191505060405180910390f35b61066e6004803603604081101561060357600080fd5b810190808035906020019064010000000081111561062057600080fd5b82018360208201111561063257600080fd5b8035906020019184600183028401116401000000008311171561065457600080fd5b9091929391929390803590602001909291905050506114bb565b005b34801561067c57600080fd5b506107366004803603602081101561069357600080fd5b81019080803590602001906401000000008111156106b057600080fd5b8201836020820111156106c257600080fd5b803590602001918460018302840111640100000000831117156106e457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116ca565b604051808215151515815260200191505060405180910390f35b34801561075c57600080fd5b506107656117a1565b6040518082815260200191505060405180910390f35b34801561078757600080fd5b506107b46004803603602081101561079e57600080fd5b81019080803590602001909291905050506117a7565b005b3480156107c257600080fd5b50610805600480360360208110156107d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117e5565b005b34801561081357600080fd5b506108f76004803603606081101561082a57600080fd5b810190808035906020019064010000000081111561084757600080fd5b82018360208201111561085957600080fd5b8035906020019184600183028401116401000000008311171561087b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061186b565b6040518082815260200191505060405180910390f35b600060405180807f737570706f727473496e74657266616365286279746573342900000000000000815250601901905060405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610adb575060405180807f72656e657728737472696e672c75696e74323536290000000000000000000000815250601501905060405180910390206040518080611bc9602891396028019050604051809103902060405180807f636f6d6d69742862797465733332290000000000000000000000000000000000815250600f01905060405180910390206040518080611bf1602691396026019050604051809103902060405180807f617661696c61626c6528737472696e67290000000000000000000000000000008152506011019050604051809103902060405180807f72656e74507269636528737472696e672c75696e7432353629000000000000008152506019019050604051809103902018181818187bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b610aea61144f565b610b5c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610bb9573d6000803e3d6000fd5b50565b610bc461144f565b610c36576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff261845a790fe29bbd6631e2ca4a5bdc83e6eed7c3271d9590d97287e00e912360405160405180910390a250565b610ce761144f565b610d59576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610e2061144f565b610e92576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b81600381905550806004819055505050565b60056020528060005260406000206000915090505481565b60008083805190602001209050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166350e9a71585600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d6e4fa868560001c6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610f7e57600080fd5b505afa158015610f92573d6000803e3d6000fd5b505050506040513d6020811015610fa857600080fd5b8101908080519060200190929190505050866040518463ffffffff1660e01b81526004018080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015611015578082015181840152602081019050610ffa565b50505050905090810190601f1680156110425780820380516001836020036101000a031916815260200191505b5094505050505060206040518083038186803b15801561106157600080fd5b505afa158015611075573d6000803e3d6000fd5b505050506040513d602081101561108b57600080fd5b810190808051906020019092919050505091505092915050565b60006110f686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050858461186b565b905042600354600560008481526020019081526020016000205401111561111c57600080fd5b426004546005600084815260200190815260200160002054011161113f57600080fd5b61118c86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506116ca565b61119557600080fd5b600560008281526020019081526020016000206000905560006111fc87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505085610ebc565b90506224ea0084101561120e57600080fd5b8034101561121b57600080fd5b60008787604051808383808284378083019250505092505050604051809103902090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fca247ac8360001c89896040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156112f457600080fd5b505af1158015611308573d6000803e3d6000fd5b505050506040513d602081101561131e57600080fd5b810190808051906020019092919050505090508673ffffffffffffffffffffffffffffffffffffffff16827fca6abbe9d7f11422cb6ca7629fbf6fe9efb1c621f71ce8f02b9f2a230097404f8b8b878660405180806020018481526020018381526020018281038252868682818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a38234111561140e573373ffffffffffffffffffffffffffffffffffffffff166108fc8434039081150290604051600060405180830381858888f1935050505015801561140c573d6000803e3d6000fd5b505b505050505050505050565b6224ea0081565b60035481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600060066114b3836118e8565b119050919050565b600061150b84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505083610ebc565b90508034101561151a57600080fd5b60008484604051808383808284378083019250505092505050604051809103902090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c475abff8360001c866040518363ffffffff1660e01b81526004018083815260200182815260200192505050602060405180830381600087803b1580156115bf57600080fd5b505af11580156115d3573d6000803e3d6000fd5b505050506040513d60208110156115e957600080fd5b810190808051906020019092919050505090508234111561164e573373ffffffffffffffffffffffffffffffffffffffff166108fc8434039081150290604051600060405180830381858888f1935050505015801561164c573d6000803e3d6000fd5b505b817f3da24c024582931cfaf8267d8ed24d13a82a8068d5bd337d30ec45cea4e506ae8787868560405180806020018481526020018381526020018281038252868682818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a2505050505050565b600080828051906020012090506116e0836114a6565b80156117995750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396e494e88260001c6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561175d57600080fd5b505afa158015611771573d6000803e3d6000fd5b505050506040513d602081101561178757600080fd5b81019080805190602001909291905050505b915050919050565b60045481565b42600454600560008481526020019081526020016000205401106117ca57600080fd5b42600560008381526020019081526020016000208190555050565b6117ed61144f565b61185f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61186881611a5e565b50565b60008084805190602001209050808484604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018281526020019350505050604051602081830303815290604052805190602001209150509392505050565b6000806000809050600084519050600092505b80821015611a5357600085838151811061191157fe5b602001015160f81c60f81b9050608060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101561195757600183019250611a45565b60e060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101561199057600283019250611a44565b60f060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610156119c957600383019250611a43565b60f8801b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015611a0157600483019250611a42565b60fc60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015611a3a57600583019250611a41565b6006830192505b5b5b5b5b5082806001019350506118fb565b829350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611ae4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611ba36026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373726567697374657228737472696e672c616464726573732c75696e743235362c62797465733332296d616b65436f6d6d69746d656e7428737472696e672c616464726573732c6279746573333229a265627a7a72305820ec1170a9e40553357dbb766cb2e6ce08ebf1b7ff917c644f26f8e046b73c557464736f6c634300050a0032"},"natspec":{"details":"A registrar controller for registering and renewing names at fixed cost.","methods":{"isOwner()":{"details":"Returns true if the caller is the current owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"runtime_bytecode":{"bytecode":""}},"PriceOracle":{"abi":[{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"expires","type":"uint256"},{"name":"duration","type":"uint256"}],"name":"price","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.5.10+commit.5a6ea5b1"},"deployment_bytecode":{"bytecode":"0x"},"natspec":{"methods":{"price(string,uint256,uint256)":{"details":"Returns the price to register or renew a name.","params":{"duration":"How long the name is being registered or extended for, in seconds.","expires":"When the name presently expires (0 if this is a new registration).","name":"The name being registered or renewed."},"return":"The price of this renewal or registration, in wei."}}},"runtime_bytecode":{"bytecode":"0x"}},"SafeMath":{"abi":[],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.5.10+commit.5a6ea5b1"},"deployment_bytecode":{"bytecode":"0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7230582056ee409a1d17ac51aa625f2fd5db64410c7f3ad94ad17d10f7709ec5693aed7864736f6c634300050a0032"},"natspec":{"details":"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.","methods":{}},"runtime_bytecode":{"bytecode":"0x73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7230582056ee409a1d17ac51aa625f2fd5db64410c7f3ad94ad17d10f7709ec5693aed7864736f6c634300050a0032"}},"ShortNameAuctionController":{"abi":[{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"owner","type":"address"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"base","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"opensea","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"}],"name":"valid","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"}],"name":"available","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_opensea","type":"address"}],"name":"setOpensea","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"proxies","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"REGISTRATION_PERIOD","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_base","type":"address"},{"name":"_proxies","type":"address"},{"name":"_opensea","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"name","type":"string"},{"indexed":false,"name":"owner","type":"address"}],"name":"NameRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.5.10+commit.5a6ea5b1"},"deployment_bytecode":{"bytecode":"0x608060405234801561001057600080fd5b5060405161122d38038061122d8339818101604052606081101561003357600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a382600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050611044806101e96000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639791c097116100715780639791c0971461025c578063aeb8ce9b1461032f578063b776c8a614610402578063bcc38d5914610446578063e0f5409714610490578063f2fde38b146104ae576100b4565b80631e59c529146100b95780635001f3b514610152578063511ed3821461019c578063715018a6146101e65780638da5cb5b146101f05780638f32d59b1461023a575b600080fd5b610150600480360360408110156100cf57600080fd5b81019080803590602001906401000000008111156100ec57600080fd5b8201836020820111156100fe57600080fd5b8035906020019184600183028401116401000000008311171561012057600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104f2565b005b61015a6108ac565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a46108d2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101ee6108f8565b005b6101f8610a31565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610242610a5a565b604051808215151515815260200191505060405180910390f35b6103156004803603602081101561027257600080fd5b810190808035906020019064010000000081111561028f57600080fd5b8201836020820111156102a157600080fd5b803590602001918460018302840111640100000000831117156102c357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610ab1565b604051808215151515815260200191505060405180910390f35b6103e86004803603602081101561034557600080fd5b810190808035906020019064010000000081111561036257600080fd5b82018360208201111561037457600080fd5b8035906020019184600183028401116401000000008311171561039657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610ad9565b604051808215151515815260200191505060405180910390f35b6104446004803603602081101561041857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba9565b005b61044e610c67565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610498610c8d565b6040518082815260200191505060405180910390f35b6104f0600480360360208110156104c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c95565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106745750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4552791600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561060a57600080fd5b505afa15801561061e573d6000803e3d6000fd5b505050506040513d602081101561063457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61067d57600080fd5b6106ca83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610ad9565b6106d357600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fca247ac61075e85858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610d1b565b836301e133806040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156107d457600080fd5b505af11580156107e8573d6000803e3d6000fd5b505050506040513d60208110156107fe57600080fd5b8101908080519060200190929190505050507f1c6eac0e720ec22bb0653aec9c19985633a4fb07971cf973096c2f8e3c37c17f83838360405180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281038252858582818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a1505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610900610a5a565b610972576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600080610abd83610d2f565b905060038110158015610ad1575060068111155b915050919050565b6000610ae482610ab1565b8015610ba25750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396e494e8610b3284610d1b565b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610b6657600080fd5b505afa158015610b7a573d6000803e3d6000fd5b505050506040513d6020811015610b9057600080fd5b81019080805190602001909291905050505b9050919050565b610bb1610a5a565b610c23576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6301e1338081565b610c9d610a5a565b610d0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610d1881610ea5565b50565b6000818051906020012060001c9050919050565b6000806000809050600084519050600092505b80821015610e9a576000858381518110610d5857fe5b602001015160f81c60f81b9050608060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610d9e57600183019250610e8c565b60e060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610dd757600283019250610e8b565b60f060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610e1057600383019250610e8a565b60f8801b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610e4857600483019250610e89565b60fc60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610e8157600583019250610e88565b6006830192505b5b5b5b5b508280600101935050610d42565b829350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610fea6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a723058206bac5fafdb76f03962eb2d5b12821d27d96230a269cbc36aaa9b0181a263953464736f6c634300050a0032"},"natspec":{"methods":{"isOwner()":{"details":"Returns true if the caller is the current owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"runtime_bytecode":{"bytecode":"0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80639791c097116100715780639791c0971461025c578063aeb8ce9b1461032f578063b776c8a614610402578063bcc38d5914610446578063e0f5409714610490578063f2fde38b146104ae576100b4565b80631e59c529146100b95780635001f3b514610152578063511ed3821461019c578063715018a6146101e65780638da5cb5b146101f05780638f32d59b1461023a575b600080fd5b610150600480360360408110156100cf57600080fd5b81019080803590602001906401000000008111156100ec57600080fd5b8201836020820111156100fe57600080fd5b8035906020019184600183028401116401000000008311171561012057600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104f2565b005b61015a6108ac565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a46108d2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101ee6108f8565b005b6101f8610a31565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610242610a5a565b604051808215151515815260200191505060405180910390f35b6103156004803603602081101561027257600080fd5b810190808035906020019064010000000081111561028f57600080fd5b8201836020820111156102a157600080fd5b803590602001918460018302840111640100000000831117156102c357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610ab1565b604051808215151515815260200191505060405180910390f35b6103e86004803603602081101561034557600080fd5b810190808035906020019064010000000081111561036257600080fd5b82018360208201111561037457600080fd5b8035906020019184600183028401116401000000008311171561039657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610ad9565b604051808215151515815260200191505060405180910390f35b6104446004803603602081101561041857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba9565b005b61044e610c67565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610498610c8d565b6040518082815260200191505060405180910390f35b6104f0600480360360208110156104c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c95565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106745750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4552791600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561060a57600080fd5b505afa15801561061e573d6000803e3d6000fd5b505050506040513d602081101561063457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61067d57600080fd5b6106ca83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610ad9565b6106d357600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fca247ac61075e85858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610d1b565b836301e133806040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156107d457600080fd5b505af11580156107e8573d6000803e3d6000fd5b505050506040513d60208110156107fe57600080fd5b8101908080519060200190929190505050507f1c6eac0e720ec22bb0653aec9c19985633a4fb07971cf973096c2f8e3c37c17f83838360405180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281038252858582818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a1505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610900610a5a565b610972576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600080610abd83610d2f565b905060038110158015610ad1575060068111155b915050919050565b6000610ae482610ab1565b8015610ba25750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396e494e8610b3284610d1b565b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610b6657600080fd5b505afa158015610b7a573d6000803e3d6000fd5b505050506040513d6020811015610b9057600080fd5b81019080805190602001909291905050505b9050919050565b610bb1610a5a565b610c23576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6301e1338081565b610c9d610a5a565b610d0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610d1881610ea5565b50565b6000818051906020012060001c9050919050565b6000806000809050600084519050600092505b80821015610e9a576000858381518110610d5857fe5b602001015160f81c60f81b9050608060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610d9e57600183019250610e8c565b60e060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610dd757600283019250610e8b565b60f060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610e1057600383019250610e8a565b60f8801b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610e4857600483019250610e89565b60fc60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610e8157600583019250610e88565b6006830192505b5b5b5b5b508280600101935050610d42565b829350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610fea6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a723058206bac5fafdb76f03962eb2d5b12821d27d96230a269cbc36aaa9b0181a263953464736f6c634300050a0032"}},"ShortNameClaims":{"abi":[{"constant":false,"inputs":[{"name":"owner","type":"address"}],"name":"removeOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"priceOracle","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"registrar","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"ratifier","type":"address"}],"name":"removeRatifier","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"pendingClaims","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"ratifier","type":"address"}],"name":"addRatifier","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"bytes"},{"name":"claimant","type":"address"},{"name":"email","type":"string"}],"name":"submitPrefixClaim","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"unresolvedClaims","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"claimed","type":"string"}],"name":"getClaimCost","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"owner","type":"address"}],"name":"addOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"claimId","type":"bytes32"}],"name":"withdrawClaim","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"ratifyClaims","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"claimed","type":"string"},{"name":"dnsname","type":"bytes"},{"name":"claimant","type":"address"},{"name":"email","type":"string"}],"name":"computeClaimId","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":false,"inputs":[{"name":"claimId","type":"bytes32"},{"name":"approved","type":"bool"}],"name":"setClaimStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"bytes"},{"name":"claimant","type":"address"},{"name":"email","type":"string"}],"name":"submitExactClaim","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"phase","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"claimId","type":"bytes32"}],"name":"resolveClaim","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"approved","type":"bytes32[]"},{"name":"declined","type":"bytes32[]"}],"name":"setClaimStatuses","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"closeClaims","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"claimIds","type":"bytes32[]"}],"name":"resolveClaims","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"REGISTRATION_PERIOD","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"claims","outputs":[{"name":"labelHash","type":"bytes32"},{"name":"claimant","type":"address"},{"name":"paid","type":"uint256"},{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"bytes"},{"name":"claimant","type":"address"},{"name":"email","type":"string"}],"name":"submitCombinedClaim","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"inputs":[{"name":"_priceOracle","type":"address"},{"name":"_registrar","type":"address"},{"name":"_ratifier","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"claimed","type":"string"},{"indexed":false,"name":"dnsname","type":"bytes"},{"indexed":false,"name":"paid","type":"uint256"},{"indexed":false,"name":"claimant","type":"address"},{"indexed":false,"name":"email","type":"string"}],"name":"ClaimSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"claimId","type":"bytes32"},{"indexed":false,"name":"status","type":"uint8"}],"name":"ClaimStatusChanged","type":"event"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.5.10+commit.5a6ea5b1"},"deployment_bytecode":{"bytecode":"0x60806040523480156200001157600080fd5b506040516200351c3803806200351c833981810160405260608110156200003757600080fd5b8101908080519060200190929190805190602001909291908051906020019092919050505082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600860006101000a81548160ff02191690836002811115620000fe57fe5b02179055506200011e3360006200014260201b620025c01790919060201c565b620001398160016200014260201b620025c01790919060201c565b50505062000306565b6200015482826200022660201b60201c565b15620001c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620002af576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180620034fa6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6131e480620003166000396000f3fe60806040526004361061014b5760003560e01c806384fd49c9116100b6578063c9fa06631161006f578063c9fa066314610aa6578063cfee88db14610b81578063d4f6841d14610b98578063e0f5409714610c1e578063eff0f59214610c49578063fb2f72d014610ce75761014b565b806384fd49c9146106385780639d6017471461064f578063a1169b7714610879578063a8712e8c146108c0578063b1c9fe6e14610a32578063c1203cb814610a6b5761014b565b80634d4de844116101085780634d4de8441461031c5780635a41ef3a1461048e57806365e3f8fa146104b95780637065cb48146105955780637cb68aa2146105e657806383197ef0146106215761014b565b8063173825d9146101505780632630c12f146101a15780632b20e397146101f85780633e08e84d1461024f5780633e6be3d2146102a057806341e6af01146102cb575b600080fd5b34801561015c57600080fd5b5061019f6004803603602081101561017357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e59565b005b3480156101ad57600080fd5b506101b6610ef6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561020457600080fd5b5061020d610f1c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561025b57600080fd5b5061029e6004803603602081101561027257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f42565b005b3480156102ac57600080fd5b506102b5610fdf565b6040518082815260200191505060405180910390f35b3480156102d757600080fd5b5061031a600480360360208110156102ee57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fe5565b005b61048c6004803603606081101561033257600080fd5b810190808035906020019064010000000081111561034f57600080fd5b82018360208201111561036157600080fd5b8035906020019184600183028401116401000000008311171561038357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561040657600080fd5b82018360208201111561041857600080fd5b8035906020019184600183028401116401000000008311171561043a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611082565b005b34801561049a57600080fd5b506104a3611113565b6040518082815260200191505060405180910390f35b3480156104c557600080fd5b5061057f600480360360208110156104dc57600080fd5b81019080803590602001906401000000008111156104f957600080fd5b82018360208201111561050b57600080fd5b8035906020019184600183028401116401000000008311171561052d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611119565b6040518082815260200191505060405180910390f35b3480156105a157600080fd5b506105e4600480360360208110156105b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061124a565b005b3480156105f257600080fd5b5061061f6004803603602081101561060957600080fd5b81019080803590602001909291905050506112e7565b005b34801561062d57600080fd5b50610636611534565b005b34801561064457600080fd5b5061064d611686565b005b34801561065b57600080fd5b506108636004803603608081101561067257600080fd5b810190808035906020019064010000000081111561068f57600080fd5b8201836020820111156106a157600080fd5b803590602001918460018302840111640100000000831117156106c357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561072657600080fd5b82018360208201111561073857600080fd5b8035906020019184600183028401116401000000008311171561075a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156107dd57600080fd5b8201836020820111156107ef57600080fd5b8035906020019184600183028401116401000000008311171561081157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506117de565b6040518082815260200191505060405180910390f35b34801561088557600080fd5b506108be6004803603604081101561089c57600080fd5b810190808035906020019092919080351515906020019092919050505061186d565b005b610a30600480360360608110156108d657600080fd5b81019080803590602001906401000000008111156108f357600080fd5b82018360208201111561090557600080fd5b8035906020019184600183028401116401000000008311171561092757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156109aa57600080fd5b8201836020820111156109bc57600080fd5b803590602001918460018302840111640100000000831117156109de57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611c19565b005b348015610a3e57600080fd5b50610a47611c3a565b60405180826002811115610a5757fe5b60ff16815260200191505060405180910390f35b348015610a7757600080fd5b50610aa460048036036020811015610a8e57600080fd5b8101908080359060200190929190505050611c4d565b005b348015610ab257600080fd5b50610b7f60048036036040811015610ac957600080fd5b8101908080359060200190640100000000811115610ae657600080fd5b820183602082011115610af857600080fd5b80359060200191846020830284011164010000000083111715610b1a57600080fd5b909192939192939080359060200190640100000000811115610b3b57600080fd5b820183602082011115610b4d57600080fd5b80359060200191846020830284011164010000000083111715610b6f57600080fd5b909192939192939050505061213d565b005b348015610b8d57600080fd5b50610b966121bb565b005b348015610ba457600080fd5b50610c1c60048036036020811015610bbb57600080fd5b8101908080359060200190640100000000811115610bd857600080fd5b820183602082011115610bea57600080fd5b80359060200191846020830284011164010000000083111715610c0c57600080fd5b9091929391929390505050612304565b005b348015610c2a57600080fd5b50610c33612342565b6040518082815260200191505060405180910390f35b348015610c5557600080fd5b50610c8260048036036020811015610c6c57600080fd5b810190808035906020019092919050505061234a565b604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001826003811115610cd057fe5b60ff16815260200194505050505060405180910390f35b610e5760048036036060811015610cfd57600080fd5b8101908080359060200190640100000000811115610d1a57600080fd5b820183602082011115610d2c57600080fd5b80359060200191846001830284011164010000000083111715610d4e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610dd157600080fd5b820183602082011115610de357600080fd5b80359060200191846001830284011164010000000083111715610e0557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506123a7565b005b610e6d33600061242590919063ffffffff16565b610edf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f43616c6c6572206d75737420626520616e206f776e657200000000000000000081525060200191505060405180910390fd5b610ef381600061250390919063ffffffff16565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610f5633600161242590919063ffffffff16565b610fc8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43616c6c6572206d75737420626520612072617469666965720000000000000081525060200191505060405180910390fd5b610fdc81600161250390919063ffffffff16565b50565b60065481565b610ff933600161242590919063ffffffff16565b61106b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43616c6c6572206d75737420626520612072617469666965720000000000000081525060200191505060405180910390fd5b61107f8160016125c090919063ffffffff16565b50565b606061108f84600061269b565b90506110df60038251036040518060400160405280600381526020017f6574680000000000000000000000000000000000000000000000000000000000815250836127599092919063ffffffff16565b6110e857600080fd5b61110d61110560006003845103846127839092919063ffffffff16565b8585856127f6565b50505050565b60075481565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166350e9a7158360006301e133806040518463ffffffff1660e01b81526004018080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b838110156111bc5780820151818401526020810190506111a1565b50505050905090810190601f1680156111e95780820380516001836020036101000a031916815260200191505b5094505050505060206040518083038186803b15801561120857600080fd5b505afa15801561121c573d6000803e3d6000fd5b505050506040513d602081101561123257600080fd5b81019080805190602001909291905050509050919050565b61125e33600061242590919063ffffffff16565b6112d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f43616c6c6572206d75737420626520616e206f776e657200000000000000000081525060200191505060405180910390fd5b6112e48160006125c090919063ffffffff16565b50565b6112ef6130e4565b60046000838152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff16600381111561139557fe5b60038111156113a057fe5b815250509050806020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113e257600080fd5b600060038111156113ef57fe5b816060015160038111156113ff57fe5b141561141d5760066000815480929190600190039190505550611431565b600760008154809291906001900391905055505b61143e8160200151612d41565b73ffffffffffffffffffffffffffffffffffffffff166108fc82604001519081150290604051600060405180830381858888f19350505050158015611487573d6000803e3d6000fd5b50817f698a3a7f5c0bc9915a6f167e9ce03ffc660392e807cf6fd57fd9ae52063dd27b6003604051808260038111156114bc57fe5b60ff16815260200191505060405180910390a2600460008381526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff021916905550505050565b61154833600061242590919063ffffffff16565b6115ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f43616c6c6572206d75737420626520616e206f776e657200000000000000000081525060200191505060405180910390fd5b60028060028111156115c857fe5b600860009054906101000a900460ff1660028111156115e357fe5b14611656576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f7420696e207265717569726564207068617365000000000000000000000081525060200191505060405180910390fd5b60006007541461166557600080fd5b61166e33612d41565b73ffffffffffffffffffffffffffffffffffffffff16ff5b61169a33600161242590919063ffffffff16565b61170c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43616c6c6572206d75737420626520612072617469666965720000000000000081525060200191505060405180910390fd5b600180600281111561171a57fe5b600860009054906101000a900460ff16600281111561173557fe5b146117a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f7420696e207265717569726564207068617365000000000000000000000081525060200191505060405180910390fd5b6000600654146117b757600080fd5b6002600860006101000a81548160ff021916908360028111156117d657fe5b021790555050565b600084805190602001208480519060200120848480519060200120604051602001808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001945050505050604051602081830303815290604052805190602001209050949350505050565b600180600281111561187b57fe5b600860009054906101000a900460ff16600281111561189657fe5b14611909576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f7420696e207265717569726564207068617365000000000000000000000081525060200191505060405180910390fd5b61191d33600061242590919063ffffffff16565b80611938575061193733600161242590919063ffffffff16565b5b61194157600080fd5b6119496130e4565b60046000858152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff1660038111156119ef57fe5b60038111156119fa57fe5b8152505090506000816040015111611a7a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f436c61696d206e6f7420666f756e64000000000000000000000000000000000081525060200191505060405180910390fd5b60006003811115611a8757fe5b81606001516003811115611a9757fe5b1415611ac75760066000815480929190600190039190505550600760008154809291906001019190505550611b1c565b60016003811115611ad457fe5b81606001516003811115611ae457fe5b1415611b1b576000600560008360000151815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b8215611b8257600560008260000151815260200190815260200160002060009054906101000a900460ff1615611b5157600080fd5b6001600560008360000151815260200190815260200160002060006101000a81548160ff0219169083151502179055505b600083611b90576002611b93565b60015b9050806004600087815260200190815260200160002060030160006101000a81548160ff02191690836003811115611bc757fe5b0217905550847f698a3a7f5c0bc9915a6f167e9ce03ffc660392e807cf6fd57fd9ae52063dd27b8260405180826003811115611bff57fe5b60ff16815260200191505060405180910390a25050505050565b6060611c2684600061269b565b9050611c34818585856127f6565b50505050565b600860009054906101000a900460ff1681565b6002806002811115611c5b57fe5b600860009054906101000a900460ff166002811115611c7657fe5b14611ce9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f7420696e207265717569726564207068617365000000000000000000000081525060200191505060405180910390fd5b611cf16130e4565b60046000848152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff166003811115611d9757fe5b6003811115611da257fe5b8152505090506000816040015111611e22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f436c61696d206e6f7420666f756e64000000000000000000000000000000000081525060200191505060405180910390fd5b60016003811115611e2f57fe5b81606001516003811115611e3f57fe5b141561203b57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fca247ac826000015160001c83602001516301e133806040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611f0557600080fd5b505af1158015611f19573d6000803e3d6000fd5b505050506040513d6020811015611f2f57600080fd5b810190808051906020019092919050505050611fec600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611fac57600080fd5b505afa158015611fc0573d6000803e3d6000fd5b505050506040513d6020811015611fd657600080fd5b8101908080519060200190929190505050612d41565b73ffffffffffffffffffffffffffffffffffffffff166108fc82604001519081150290604051600060405180830381858888f19350505050158015612035573d6000803e3d6000fd5b506120c4565b6002600381111561204857fe5b8160600151600381111561205857fe5b14156120ba5761206b8160200151612d41565b73ffffffffffffffffffffffffffffffffffffffff166108fc82604001519081150290604051600060405180830381858888f193505050501580156120b4573d6000803e3d6000fd5b506120c3565b60006120c257fe5b5b5b60076000815480929190600190039190505550600460008481526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff02191690555050505050565b60008090505b848490508110156121785761216b85858381811061215d57fe5b90506020020135600161186d565b8080600101915050612143565b5060008090505b828290508110156121b4576121a783838381811061219957fe5b90506020020135600061186d565b808060010191505061217f565b5050505050565b6121cf33600061242590919063ffffffff16565b612241576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f43616c6c6572206d75737420626520616e206f776e657200000000000000000081525060200191505060405180910390fd5b600080600281111561224f57fe5b600860009054906101000a900460ff16600281111561226a57fe5b146122dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f7420696e207265717569726564207068617365000000000000000000000081525060200191505060405180910390fd5b6001600860006101000a81548160ff021916908360028111156122fc57fe5b021790555050565b60008090505b8282905081101561233d5761233083838381811061232457fe5b90506020020135611c4d565b808060010191505061230a565b505050565b6301e1338081565b60046020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16905084565b60606123b484600061269b565b905060606123c385600161269b565b90506123cd613130565b6123e4825184510182612d4b90919063ffffffff16565b506123f88382612d9f90919063ffffffff16565b5061240c8282612d9f90919063ffffffff16565b5061241d81600001518787876127f6565b505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156124ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061318e6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61250d8282612425565b612562576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061314b6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6125ca8282612425565b1561263d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6060600080905060008090505b838110156126fb57845182106126d1576040518060200160405280600081525092505050612753565b60016126e68387612dc190919063ffffffff16565b0160ff168201915080806001019150506126a8565b508351811061271c5760405180602001604052806000815250915050612753565b60006127318286612dc190919063ffffffff16565b60ff16905061274e6001830182876127839092919063ffffffff16565b925050505b92915050565b60008151830184511015801561277a575061277984848460008651612de5565b5b90509392505050565b60608351828401111561279557600080fd5b6060826040519080825280601f01601f1916602001820160405280156127ca5781602001600182028038833980820191505090505b50905060008060208301915085602088010190506127e9828287612e09565b8293505050509392505050565b600080600281111561280457fe5b600860009054906101000a900460ff16600281111561281f57fe5b14612892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f7420696e207265717569726564207068617365000000000000000000000081525060200191505060405180910390fd5b600061289d86612e52565b9050600381101580156128b1575060068111155b6128ba57600080fd5b60006128c8878787876117de565b90506000600460008381526020019081526020016000206002015414612956576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f436c61696d20616c7265616479207375626d697474656400000000000000000081525060200191505060405180910390fd5b600061296387600261269b565b51146129d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4e616d65206d757374206265206120324c44000000000000000000000000000081525060200191505060405180910390fd5b60006129e288611119565b905080341015612a3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061316c6022913960400191505060405180910390fd5b80341115612a8f573373ffffffffffffffffffffffffffffffffffffffff166108fc8234039081150290604051600060405180830381858888f19350505050158015612a8d573d6000803e3d6000fd5b505b6040518060800160405280898051906020012081526020018773ffffffffffffffffffffffffffffffffffffffff16815260200182815260200160006003811115612ad657fe5b815250600460008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff02191690836003811115612b6b57fe5b02179055509050506006600081548092919060010191905055507f186f55cfb37bd38b311b8d5e8a212edf83c4d92107f48dbb7a4a5c217714eab188888389896040518080602001806020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001848103845289818151815260200191508051906020019080838360005b83811015612c2b578082015181840152602081019050612c10565b50505050905090810190601f168015612c585780820380516001836020036101000a031916815260200191505b50848103835288818151815260200191508051906020019080838360005b83811015612c91578082015181840152602081019050612c76565b50505050905090810190601f168015612cbe5780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b83811015612cf7578082015181840152602081019050612cdc565b50505050905090810190601f168015612d245780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050505050565b6000819050919050565b612d53613130565b600060208381612d5f57fe5b0614612d785760208281612d6f57fe5b06602003820191505b81836020018181525050604051808452600081528281016020016040525082905092915050565b612da7613130565b612db983846000015151848551612fc8565b905092915050565b6000828281518110612dcf57fe5b602001015160f81c60f81b60f81c905092915050565b6000612df2848484613081565b612dfd878785613081565b14905095945050505050565b5b60208110612e2d5781518352602083019250602082019150602081039050612e0a565b60006001826020036101000a0390508019835116818551168181178652505050505050565b6000806000809050600084519050600092505b80821015612fbd576000858381518110612e7b57fe5b602001015160f81c60f81b9050608060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015612ec157600183019250612faf565b60e060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015612efa57600283019250612fae565b60f060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015612f3357600383019250612fad565b60f8801b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015612f6b57600483019250612fac565b60fc60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015612fa457600583019250612fab565b6006830192505b5b5b5b5b508280600101935050612e65565b829350505050919050565b612fd0613130565b8251821115612fde57600080fd5b846020015182850111156130095761300885600261300288602001518887016130a4565b026130c0565b5b6000808651805187602083010193508088870111156130285787860182525b60208701925050505b602084106130545780518252602082019150602081019050602084039350613031565b60006001856020036101000a03905080198251168184511681811785525050879350505050949350505050565b60008351828401111561309357600080fd5b818360208601012090509392505050565b6000818311156130b6578290506130ba565b8190505b92915050565b6060826000015190506130d38383612d4b565b506130de8382612d9f565b50505050565b604051806080016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000600381111561312a57fe5b81525090565b60405180604001604052806060815260200160008152509056fe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65496e73756666696369656e742066756e647320666f72207265736572766174696f6e526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a265627a7a72305820fed6851bd41c2e214c517ad85e6a97016e355ea9e1308a8d4e6b5df02490b44564736f6c634300050a0032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373"},"natspec":{"details":"ShortNameClaims is a contract that permits people to register claims     for short (3-6 character) ENS names ahead of the auction process. *      Anyone with a DNS name registered before January 1, 2019, may use this     name to support a claim for a matching ENS name. In the event that     multiple claimants request the same name, the name will be assigned to     the oldest registered DNS name. *      Claims may be submitted by calling `submitExactClaim`,     `submitCombinedClaim` or `submitPrefixClaim` as appropriate. *      Claims require lodging a deposit equivalent to 365 days' registration of     the name. If the claim is approved, this deposit is spent, and the name     is registered for the claimant for 365 days. If the claim is declined,     the deposit will be returned.","methods":{"closeClaims()":{"details":"Closes the claim submission period.     Callable only by the owner."},"computeClaimId(string,bytes,address,string)":{"details":"Computes the claim ID for a submitted claim, so it can be looked up     using `claims`.","params":{"claimant":"The address making the claim.","claimed":"The name being claimed (eg, 'foo')","dnsname":"The DNS-encoded name supporting the claim (eg, 'foo.test')"},"return":"The claim ID."},"destroy()":{"details":"Cleans up the contract, after all claims are resolved.     Callable only by the owner, and only in final state."},"getClaimCost(string)":{"details":"Returns the cost associated with placing a claim.","params":{"claimed":"The name being claimed."},"return":"The cost in wei for this claim."},"ratifyClaims()":{"details":"Ratifies the current set of claims.     Ratification freezes the claims and their resolutions, and permits     them to be acted on."},"resolveClaim(bytes32)":{"details":"Resolves a claim. Callable by anyone, only in the final phase.     Resolving a claim either registers the name or refunds the claimant.","params":{"claimId":"The claim ID to resolve."}},"resolveClaims(bytes32[])":{"details":"Resolves multiple claims. Callable by anyone, only in the final phase.","params":{"claimIds":"A list of claim IDs to resolve."}},"setClaimStatus(bytes32,bool)":{"details":"Sets the status of a claim to either APPROVED or DECLINED.     Callable only during the review phase, and only by the owner or     ratifier.","params":{"approved":"True if the claim is approved, false if it is declined.","claimId":"The claim to set the status of."}},"setClaimStatuses(bytes32[],bytes32[])":{"details":"Sets the status of multiple claims. Callable only during the review     phase, and only by the owner or ratifier.","params":{"approved":"A list of approved claim IDs.","declined":"A list of declined claim IDs."}},"submitCombinedClaim(bytes,address,string)":{"details":"Submits a claim for match on name+tld (eg, foo.tv -> footv).     Claimants must provide an amount of ether equal to 365 days'     registration cost; call `getClaimCost` to determine this amount.     Claimants should supply a little extra in case of variation in price;     any excess will be returned to the sender.","params":{"claimant":"The address of the claimant.","email":"An email address for correspondence regarding the claim.","name":"The DNS-encoded name of the domain being used to support the            claim."}},"submitExactClaim(bytes,address,string)":{"details":"Submits a claim for an exact match (eg, foo.test -> foo.eth).     Claimants must provide an amount of ether equal to 365 days'     registration cost; call `getClaimCost` to determine this amount.     Claimants should supply a little extra in case of variation in price;     any excess will be returned to the sender.","params":{"claimant":"The address of the claimant.","email":"An email address for correspondence regarding the claim.","name":"The DNS-encoded name of the domain being used to support the            claim."}},"submitPrefixClaim(bytes,address,string)":{"details":"Submits a claim for prefix match (eg, fooeth.test -> foo.eth).     Claimants must provide an amount of ether equal to 365 days'     registration cost; call `getClaimCost` to determine this amount.     Claimants should supply a little extra in case of variation in price;     any excess will be returned to the sender.","params":{"claimant":"The address of the claimant.","email":"An email address for correspondence regarding the claim.","name":"The DNS-encoded name of the domain being used to support the            claim."}},"withdrawClaim(bytes32)":{"details":"Withdraws a claim and refunds the claimant.     Callable only by the claimant, at any time.","params":{"claimId":"The ID of the claim to withdraw."}}}},"runtime_bytecode":{"bytecode":"0x60806040526004361061014b5760003560e01c806384fd49c9116100b6578063c9fa06631161006f578063c9fa066314610aa6578063cfee88db14610b81578063d4f6841d14610b98578063e0f5409714610c1e578063eff0f59214610c49578063fb2f72d014610ce75761014b565b806384fd49c9146106385780639d6017471461064f578063a1169b7714610879578063a8712e8c146108c0578063b1c9fe6e14610a32578063c1203cb814610a6b5761014b565b80634d4de844116101085780634d4de8441461031c5780635a41ef3a1461048e57806365e3f8fa146104b95780637065cb48146105955780637cb68aa2146105e657806383197ef0146106215761014b565b8063173825d9146101505780632630c12f146101a15780632b20e397146101f85780633e08e84d1461024f5780633e6be3d2146102a057806341e6af01146102cb575b600080fd5b34801561015c57600080fd5b5061019f6004803603602081101561017357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e59565b005b3480156101ad57600080fd5b506101b6610ef6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561020457600080fd5b5061020d610f1c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561025b57600080fd5b5061029e6004803603602081101561027257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f42565b005b3480156102ac57600080fd5b506102b5610fdf565b6040518082815260200191505060405180910390f35b3480156102d757600080fd5b5061031a600480360360208110156102ee57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fe5565b005b61048c6004803603606081101561033257600080fd5b810190808035906020019064010000000081111561034f57600080fd5b82018360208201111561036157600080fd5b8035906020019184600183028401116401000000008311171561038357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561040657600080fd5b82018360208201111561041857600080fd5b8035906020019184600183028401116401000000008311171561043a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611082565b005b34801561049a57600080fd5b506104a3611113565b6040518082815260200191505060405180910390f35b3480156104c557600080fd5b5061057f600480360360208110156104dc57600080fd5b81019080803590602001906401000000008111156104f957600080fd5b82018360208201111561050b57600080fd5b8035906020019184600183028401116401000000008311171561052d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611119565b6040518082815260200191505060405180910390f35b3480156105a157600080fd5b506105e4600480360360208110156105b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061124a565b005b3480156105f257600080fd5b5061061f6004803603602081101561060957600080fd5b81019080803590602001909291905050506112e7565b005b34801561062d57600080fd5b50610636611534565b005b34801561064457600080fd5b5061064d611686565b005b34801561065b57600080fd5b506108636004803603608081101561067257600080fd5b810190808035906020019064010000000081111561068f57600080fd5b8201836020820111156106a157600080fd5b803590602001918460018302840111640100000000831117156106c357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561072657600080fd5b82018360208201111561073857600080fd5b8035906020019184600183028401116401000000008311171561075a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156107dd57600080fd5b8201836020820111156107ef57600080fd5b8035906020019184600183028401116401000000008311171561081157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506117de565b6040518082815260200191505060405180910390f35b34801561088557600080fd5b506108be6004803603604081101561089c57600080fd5b810190808035906020019092919080351515906020019092919050505061186d565b005b610a30600480360360608110156108d657600080fd5b81019080803590602001906401000000008111156108f357600080fd5b82018360208201111561090557600080fd5b8035906020019184600183028401116401000000008311171561092757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156109aa57600080fd5b8201836020820111156109bc57600080fd5b803590602001918460018302840111640100000000831117156109de57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611c19565b005b348015610a3e57600080fd5b50610a47611c3a565b60405180826002811115610a5757fe5b60ff16815260200191505060405180910390f35b348015610a7757600080fd5b50610aa460048036036020811015610a8e57600080fd5b8101908080359060200190929190505050611c4d565b005b348015610ab257600080fd5b50610b7f60048036036040811015610ac957600080fd5b8101908080359060200190640100000000811115610ae657600080fd5b820183602082011115610af857600080fd5b80359060200191846020830284011164010000000083111715610b1a57600080fd5b909192939192939080359060200190640100000000811115610b3b57600080fd5b820183602082011115610b4d57600080fd5b80359060200191846020830284011164010000000083111715610b6f57600080fd5b909192939192939050505061213d565b005b348015610b8d57600080fd5b50610b966121bb565b005b348015610ba457600080fd5b50610c1c60048036036020811015610bbb57600080fd5b8101908080359060200190640100000000811115610bd857600080fd5b820183602082011115610bea57600080fd5b80359060200191846020830284011164010000000083111715610c0c57600080fd5b9091929391929390505050612304565b005b348015610c2a57600080fd5b50610c33612342565b6040518082815260200191505060405180910390f35b348015610c5557600080fd5b50610c8260048036036020811015610c6c57600080fd5b810190808035906020019092919050505061234a565b604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001826003811115610cd057fe5b60ff16815260200194505050505060405180910390f35b610e5760048036036060811015610cfd57600080fd5b8101908080359060200190640100000000811115610d1a57600080fd5b820183602082011115610d2c57600080fd5b80359060200191846001830284011164010000000083111715610d4e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610dd157600080fd5b820183602082011115610de357600080fd5b80359060200191846001830284011164010000000083111715610e0557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506123a7565b005b610e6d33600061242590919063ffffffff16565b610edf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f43616c6c6572206d75737420626520616e206f776e657200000000000000000081525060200191505060405180910390fd5b610ef381600061250390919063ffffffff16565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610f5633600161242590919063ffffffff16565b610fc8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43616c6c6572206d75737420626520612072617469666965720000000000000081525060200191505060405180910390fd5b610fdc81600161250390919063ffffffff16565b50565b60065481565b610ff933600161242590919063ffffffff16565b61106b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43616c6c6572206d75737420626520612072617469666965720000000000000081525060200191505060405180910390fd5b61107f8160016125c090919063ffffffff16565b50565b606061108f84600061269b565b90506110df60038251036040518060400160405280600381526020017f6574680000000000000000000000000000000000000000000000000000000000815250836127599092919063ffffffff16565b6110e857600080fd5b61110d61110560006003845103846127839092919063ffffffff16565b8585856127f6565b50505050565b60075481565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166350e9a7158360006301e133806040518463ffffffff1660e01b81526004018080602001848152602001838152602001828103825285818151815260200191508051906020019080838360005b838110156111bc5780820151818401526020810190506111a1565b50505050905090810190601f1680156111e95780820380516001836020036101000a031916815260200191505b5094505050505060206040518083038186803b15801561120857600080fd5b505afa15801561121c573d6000803e3d6000fd5b505050506040513d602081101561123257600080fd5b81019080805190602001909291905050509050919050565b61125e33600061242590919063ffffffff16565b6112d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f43616c6c6572206d75737420626520616e206f776e657200000000000000000081525060200191505060405180910390fd5b6112e48160006125c090919063ffffffff16565b50565b6112ef6130e4565b60046000838152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff16600381111561139557fe5b60038111156113a057fe5b815250509050806020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113e257600080fd5b600060038111156113ef57fe5b816060015160038111156113ff57fe5b141561141d5760066000815480929190600190039190505550611431565b600760008154809291906001900391905055505b61143e8160200151612d41565b73ffffffffffffffffffffffffffffffffffffffff166108fc82604001519081150290604051600060405180830381858888f19350505050158015611487573d6000803e3d6000fd5b50817f698a3a7f5c0bc9915a6f167e9ce03ffc660392e807cf6fd57fd9ae52063dd27b6003604051808260038111156114bc57fe5b60ff16815260200191505060405180910390a2600460008381526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff021916905550505050565b61154833600061242590919063ffffffff16565b6115ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f43616c6c6572206d75737420626520616e206f776e657200000000000000000081525060200191505060405180910390fd5b60028060028111156115c857fe5b600860009054906101000a900460ff1660028111156115e357fe5b14611656576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f7420696e207265717569726564207068617365000000000000000000000081525060200191505060405180910390fd5b60006007541461166557600080fd5b61166e33612d41565b73ffffffffffffffffffffffffffffffffffffffff16ff5b61169a33600161242590919063ffffffff16565b61170c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43616c6c6572206d75737420626520612072617469666965720000000000000081525060200191505060405180910390fd5b600180600281111561171a57fe5b600860009054906101000a900460ff16600281111561173557fe5b146117a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f7420696e207265717569726564207068617365000000000000000000000081525060200191505060405180910390fd5b6000600654146117b757600080fd5b6002600860006101000a81548160ff021916908360028111156117d657fe5b021790555050565b600084805190602001208480519060200120848480519060200120604051602001808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b8152601401828152602001945050505050604051602081830303815290604052805190602001209050949350505050565b600180600281111561187b57fe5b600860009054906101000a900460ff16600281111561189657fe5b14611909576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f7420696e207265717569726564207068617365000000000000000000000081525060200191505060405180910390fd5b61191d33600061242590919063ffffffff16565b80611938575061193733600161242590919063ffffffff16565b5b61194157600080fd5b6119496130e4565b60046000858152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff1660038111156119ef57fe5b60038111156119fa57fe5b8152505090506000816040015111611a7a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f436c61696d206e6f7420666f756e64000000000000000000000000000000000081525060200191505060405180910390fd5b60006003811115611a8757fe5b81606001516003811115611a9757fe5b1415611ac75760066000815480929190600190039190505550600760008154809291906001019190505550611b1c565b60016003811115611ad457fe5b81606001516003811115611ae457fe5b1415611b1b576000600560008360000151815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b8215611b8257600560008260000151815260200190815260200160002060009054906101000a900460ff1615611b5157600080fd5b6001600560008360000151815260200190815260200160002060006101000a81548160ff0219169083151502179055505b600083611b90576002611b93565b60015b9050806004600087815260200190815260200160002060030160006101000a81548160ff02191690836003811115611bc757fe5b0217905550847f698a3a7f5c0bc9915a6f167e9ce03ffc660392e807cf6fd57fd9ae52063dd27b8260405180826003811115611bff57fe5b60ff16815260200191505060405180910390a25050505050565b6060611c2684600061269b565b9050611c34818585856127f6565b50505050565b600860009054906101000a900460ff1681565b6002806002811115611c5b57fe5b600860009054906101000a900460ff166002811115611c7657fe5b14611ce9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f7420696e207265717569726564207068617365000000000000000000000081525060200191505060405180910390fd5b611cf16130e4565b60046000848152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff166003811115611d9757fe5b6003811115611da257fe5b8152505090506000816040015111611e22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f436c61696d206e6f7420666f756e64000000000000000000000000000000000081525060200191505060405180910390fd5b60016003811115611e2f57fe5b81606001516003811115611e3f57fe5b141561203b57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fca247ac826000015160001c83602001516301e133806040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611f0557600080fd5b505af1158015611f19573d6000803e3d6000fd5b505050506040513d6020811015611f2f57600080fd5b810190808051906020019092919050505050611fec600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611fac57600080fd5b505afa158015611fc0573d6000803e3d6000fd5b505050506040513d6020811015611fd657600080fd5b8101908080519060200190929190505050612d41565b73ffffffffffffffffffffffffffffffffffffffff166108fc82604001519081150290604051600060405180830381858888f19350505050158015612035573d6000803e3d6000fd5b506120c4565b6002600381111561204857fe5b8160600151600381111561205857fe5b14156120ba5761206b8160200151612d41565b73ffffffffffffffffffffffffffffffffffffffff166108fc82604001519081150290604051600060405180830381858888f193505050501580156120b4573d6000803e3d6000fd5b506120c3565b60006120c257fe5b5b5b60076000815480929190600190039190505550600460008481526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff02191690555050505050565b60008090505b848490508110156121785761216b85858381811061215d57fe5b90506020020135600161186d565b8080600101915050612143565b5060008090505b828290508110156121b4576121a783838381811061219957fe5b90506020020135600061186d565b808060010191505061217f565b5050505050565b6121cf33600061242590919063ffffffff16565b612241576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f43616c6c6572206d75737420626520616e206f776e657200000000000000000081525060200191505060405180910390fd5b600080600281111561224f57fe5b600860009054906101000a900460ff16600281111561226a57fe5b146122dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f7420696e207265717569726564207068617365000000000000000000000081525060200191505060405180910390fd5b6001600860006101000a81548160ff021916908360028111156122fc57fe5b021790555050565b60008090505b8282905081101561233d5761233083838381811061232457fe5b90506020020135611c4d565b808060010191505061230a565b505050565b6301e1338081565b60046020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16905084565b60606123b484600061269b565b905060606123c385600161269b565b90506123cd613130565b6123e4825184510182612d4b90919063ffffffff16565b506123f88382612d9f90919063ffffffff16565b5061240c8282612d9f90919063ffffffff16565b5061241d81600001518787876127f6565b505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156124ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061318e6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61250d8282612425565b612562576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061314b6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6125ca8282612425565b1561263d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6060600080905060008090505b838110156126fb57845182106126d1576040518060200160405280600081525092505050612753565b60016126e68387612dc190919063ffffffff16565b0160ff168201915080806001019150506126a8565b508351811061271c5760405180602001604052806000815250915050612753565b60006127318286612dc190919063ffffffff16565b60ff16905061274e6001830182876127839092919063ffffffff16565b925050505b92915050565b60008151830184511015801561277a575061277984848460008651612de5565b5b90509392505050565b60608351828401111561279557600080fd5b6060826040519080825280601f01601f1916602001820160405280156127ca5781602001600182028038833980820191505090505b50905060008060208301915085602088010190506127e9828287612e09565b8293505050509392505050565b600080600281111561280457fe5b600860009054906101000a900460ff16600281111561281f57fe5b14612892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4e6f7420696e207265717569726564207068617365000000000000000000000081525060200191505060405180910390fd5b600061289d86612e52565b9050600381101580156128b1575060068111155b6128ba57600080fd5b60006128c8878787876117de565b90506000600460008381526020019081526020016000206002015414612956576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f436c61696d20616c7265616479207375626d697474656400000000000000000081525060200191505060405180910390fd5b600061296387600261269b565b51146129d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4e616d65206d757374206265206120324c44000000000000000000000000000081525060200191505060405180910390fd5b60006129e288611119565b905080341015612a3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061316c6022913960400191505060405180910390fd5b80341115612a8f573373ffffffffffffffffffffffffffffffffffffffff166108fc8234039081150290604051600060405180830381858888f19350505050158015612a8d573d6000803e3d6000fd5b505b6040518060800160405280898051906020012081526020018773ffffffffffffffffffffffffffffffffffffffff16815260200182815260200160006003811115612ad657fe5b815250600460008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff02191690836003811115612b6b57fe5b02179055509050506006600081548092919060010191905055507f186f55cfb37bd38b311b8d5e8a212edf83c4d92107f48dbb7a4a5c217714eab188888389896040518080602001806020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001848103845289818151815260200191508051906020019080838360005b83811015612c2b578082015181840152602081019050612c10565b50505050905090810190601f168015612c585780820380516001836020036101000a031916815260200191505b50848103835288818151815260200191508051906020019080838360005b83811015612c91578082015181840152602081019050612c76565b50505050905090810190601f168015612cbe5780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b83811015612cf7578082015181840152602081019050612cdc565b50505050905090810190601f168015612d245780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050505050565b6000819050919050565b612d53613130565b600060208381612d5f57fe5b0614612d785760208281612d6f57fe5b06602003820191505b81836020018181525050604051808452600081528281016020016040525082905092915050565b612da7613130565b612db983846000015151848551612fc8565b905092915050565b6000828281518110612dcf57fe5b602001015160f81c60f81b60f81c905092915050565b6000612df2848484613081565b612dfd878785613081565b14905095945050505050565b5b60208110612e2d5781518352602083019250602082019150602081039050612e0a565b60006001826020036101000a0390508019835116818551168181178652505050505050565b6000806000809050600084519050600092505b80821015612fbd576000858381518110612e7b57fe5b602001015160f81c60f81b9050608060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015612ec157600183019250612faf565b60e060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015612efa57600283019250612fae565b60f060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015612f3357600383019250612fad565b60f8801b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015612f6b57600483019250612fac565b60fc60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015612fa457600583019250612fab565b6006830192505b5b5b5b5b508280600101935050612e65565b829350505050919050565b612fd0613130565b8251821115612fde57600080fd5b846020015182850111156130095761300885600261300288602001518887016130a4565b026130c0565b5b6000808651805187602083010193508088870111156130285787860182525b60208701925050505b602084106130545780518252602082019150602081019050602084039350613031565b60006001856020036101000a03905080198251168184511681811785525050879350505050949350505050565b60008351828401111561309357600080fd5b818360208601012090509392505050565b6000818311156130b6578290506130ba565b8190505b92915050565b6060826000015190506130d38383612d4b565b506130de8382612d9f565b50505050565b604051806080016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000600381111561312a57fe5b81525090565b60405180604001604052806060815260200160008152509056fe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65496e73756666696369656e742066756e647320666f72207265736572766174696f6e526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a265627a7a72305820fed6851bd41c2e214c517ad85e6a97016e355ea9e1308a8d4e6b5df02490b44564736f6c634300050a0032"}},"SimplePriceOracle":{"abi":[{"constant":true,"inputs":[{"name":"","type":"string"},{"name":"","type":"uint256"},{"name":"duration","type":"uint256"}],"name":"price","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_rentPrice","type":"uint256"}],"name":"setPrice","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"rentPrice","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_rentPrice","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"price","type":"uint256"}],"name":"RentPriceChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.5.10+commit.5a6ea5b1"},"deployment_bytecode":{"bytecode":"0x608060405234801561001057600080fd5b5060405161095f38038061095f8339818101604052602081101561003357600080fd5b8101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a361010f8161011560201b60201c565b5061022d565b6101236101d660201b60201c565b610195576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b806001819055507f0b72f3e11c5de918a6d97fb006e47dcf1e9c2f5771378189a012faecdc7e63a1816040518082815260200191505060405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6107238061023c6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638f32d59b1161005b5780638f32d59b1461017757806391b7f5ed14610199578063f2fde38b146101c7578063f8af64ed1461020b5761007d565b806350e9a71514610082578063715018a6146101235780638da5cb5b1461012d575b600080fd5b61010d6004803603606081101561009857600080fd5b81019080803590602001906401000000008111156100b557600080fd5b8201836020820111156100c757600080fd5b803590602001918460018302840111640100000000831117156100e957600080fd5b90919293919293908035906020019092919080359060200190929190505050610229565b6040518082815260200191505060405180910390f35b61012b61024a565b005b610135610383565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61017f6103ac565b604051808215151515815260200191505060405180910390f35b6101c5600480360360208110156101af57600080fd5b8101908080359060200190929190505050610403565b005b610209600480360360208110156101dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104be565b005b610213610544565b6040518082815260200191505060405180910390f35b60006102406001548361054a90919063ffffffff16565b9050949350505050565b6102526103ac565b6102c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b61040b6103ac565b61047d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b806001819055507f0b72f3e11c5de918a6d97fb006e47dcf1e9c2f5771378189a012faecdc7e63a1816040518082815260200191505060405180910390a150565b6104c66103ac565b610538576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61054181610584565b50565b60015481565b60008083141561055d576000905061057e565b600082840290508284828161056e57fe5b041461057957600080fd5b809150505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561060a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806106c96026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a72305820e6cc0ad34bdd55a987f7e824fc97029559d16a18c985a20416f3daf6ca02b2e764736f6c634300050a0032"},"natspec":{"methods":{"isOwner()":{"details":"Returns true if the caller is the current owner."},"owner()":{"details":"Returns the address of the current owner."},"price(string,uint256,uint256)":{"details":"Returns the price to register or renew a name.","params":{"duration":"How long the name is being registered or extended for, in seconds."},"return":"The price of this renewal or registration, in wei."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"runtime_bytecode":{"bytecode":"0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638f32d59b1161005b5780638f32d59b1461017757806391b7f5ed14610199578063f2fde38b146101c7578063f8af64ed1461020b5761007d565b806350e9a71514610082578063715018a6146101235780638da5cb5b1461012d575b600080fd5b61010d6004803603606081101561009857600080fd5b81019080803590602001906401000000008111156100b557600080fd5b8201836020820111156100c757600080fd5b803590602001918460018302840111640100000000831117156100e957600080fd5b90919293919293908035906020019092919080359060200190929190505050610229565b6040518082815260200191505060405180910390f35b61012b61024a565b005b610135610383565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61017f6103ac565b604051808215151515815260200191505060405180910390f35b6101c5600480360360208110156101af57600080fd5b8101908080359060200190929190505050610403565b005b610209600480360360208110156101dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104be565b005b610213610544565b6040518082815260200191505060405180910390f35b60006102406001548361054a90919063ffffffff16565b9050949350505050565b6102526103ac565b6102c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b61040b6103ac565b61047d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b806001819055507f0b72f3e11c5de918a6d97fb006e47dcf1e9c2f5771378189a012faecdc7e63a1816040518082815260200191505060405180910390a150565b6104c66103ac565b610538576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61054181610584565b50565b60015481565b60008083141561055d576000905061057e565b600082840290508284828161056e57fe5b041461057957600080fd5b809150505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561060a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806106c96026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a72305820e6cc0ad34bdd55a987f7e824fc97029559d16a18c985a20416f3daf6ca02b2e764736f6c634300050a0032"}},"StablePriceOracle":{"abi":[{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"rentPrices","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"","type":"uint256"},{"name":"duration","type":"uint256"}],"name":"price","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_rentPrices","type":"uint256[]"}],"name":"setPrices","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_usdOracle","type":"address"}],"name":"setOracle","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_usdOracle","type":"address"},{"name":"_rentPrices","type":"uint256[]"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oracle","type":"address"}],"name":"OracleChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"prices","type":"uint256[]"}],"name":"RentPriceChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"previousOwner","type":"address"},{"indexed":true,"name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.5.10+commit.5a6ea5b1"},"deployment_bytecode":{"bytecode":"0x60806040523480156200001157600080fd5b50604051620011c5380380620011c5833981810160405260408110156200003757600080fd5b810190808051906020019092919080516401000000008111156200005a57600080fd5b828101905060208101848111156200007157600080fd5b81518560208202830111640100000000821117156200008f57600080fd5b5050929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a362000164826200017d60201b60201c565b6200017581620002a760201b60201c565b505062000491565b6200018d620003c060201b60201c565b62000200576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0e05ae75e8b926552cf6fcd744d19f422561e3ced1e426868730852702dbe41881604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b620002b7620003c060201b60201c565b6200032a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600290805190602001906200034292919062000417565b507f73422d94aedd596c2d4d39f27a01033adc390a9054efaf259afefd95ef7331df816040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620003aa5780820151818401526020810190506200038d565b505050509050019250505060405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b82805482825590600052602060002090810192821562000456579160200282015b828111156200045557825182559160200191906001019062000438565b5b50905062000465919062000469565b5090565b6200048e91905b808211156200048a57600081600090555060010162000470565b5090565b90565b610d2480620004a16000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637adbf9731161005b5780637adbf973146102325780638da5cb5b146102765780638f32d59b146102c0578063f2fde38b146102e257610088565b806306d5d0b61461008d57806350e9a715146100cf578063715018a61461017057806379cf92d31461017a575b600080fd5b6100b9600480360360208110156100a357600080fd5b8101908080359060200190929190505050610326565b6040518082815260200191505060405180910390f35b61015a600480360360608110156100e557600080fd5b810190808035906020019064010000000081111561010257600080fd5b82018360208201111561011457600080fd5b8035906020019184600183028401116401000000008311171561013657600080fd5b90919293919293908035906020019092919080359060200190929190505050610347565b6040518082815260200191505060405180910390f35b6101786104d1565b005b6102306004803603602081101561019057600080fd5b81019080803590602001906401000000008111156101ad57600080fd5b8201836020820111156101bf57600080fd5b803590602001918460208302840111640100000000831117156101e157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929050505061060a565b005b6102746004803603602081101561024857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610716565b005b61027e610837565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102c8610860565b604051808215151515815260200191505060405180910390f35b610324600480360360208110156102f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108b7565b005b6002818154811061033357fe5b906000526020600020016000915090505481565b60008061039786868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061093d565b90506002805490508111156103af5760028054905090505b600081116103bc57600080fd5b60006103eb84600260018503815481106103d257fe5b9060005260206000200154610ab390919063ffffffff16565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166357de26a46040518163ffffffff1660e01b815260040160206040518083038186803b15801561045757600080fd5b505afa15801561046b573d6000803e3d6000fd5b505050506040513d602081101561048157600080fd5b810190808051906020019092919050505060001c90506104c4816104b6670de0b6b3a764000085610ab390919063ffffffff16565b610aed90919063ffffffff16565b9350505050949350505050565b6104d9610860565b61054b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610612610860565b610684576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b806002908051906020019061069a929190610c57565b507f73422d94aedd596c2d4d39f27a01033adc390a9054efaf259afefd95ef7331df816040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107005780820151818401526020810190506106e5565b505050509050019250505060405180910390a150565b61071e610860565b610790576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0e05ae75e8b926552cf6fcd744d19f422561e3ced1e426868730852702dbe41881604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6108bf610860565b610931576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61093a81610b13565b50565b6000806000809050600084519050600092505b80821015610aa857600085838151811061096657fe5b602001015160f81c60f81b9050608060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610156109ac57600183019250610a9a565b60e060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610156109e557600283019250610a99565b60f060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610a1e57600383019250610a98565b60f8801b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610a5657600483019250610a97565b60fc60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610a8f57600583019250610a96565b6006830192505b5b5b5b5b508280600101935050610950565b829350505050919050565b600080831415610ac65760009050610ae7565b6000828402905082848281610ad757fe5b0414610ae257600080fd5b809150505b92915050565b6000808211610afb57600080fd5b6000828481610b0657fe5b0490508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610cca6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054828255906000526020600020908101928215610c93579160200282015b82811115610c92578251825591602001919060010190610c77565b5b509050610ca09190610ca4565b5090565b610cc691905b80821115610cc2576000816000905550600101610caa565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a723058204dfada189ea8b432fc4371863ed68e474225d3d2a504a79687c973dbac16c7c164736f6c634300050a0032"},"natspec":{"methods":{"isOwner()":{"details":"Returns true if the caller is the current owner."},"owner()":{"details":"Returns the address of the current owner."},"price(string,uint256,uint256)":{"details":"Returns the price to register or renew a name.","params":{"duration":"How long the name is being registered or extended for, in seconds.","name":"The name being registered or renewed."},"return":"The price of this renewal or registration, in wei."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setOracle(address)":{"details":"Sets the price oracle address","params":{"_usdOracle":"The address of the price oracle to use."}},"setPrices(uint256[])":{"details":"Sets rent prices.","params":{"_rentPrices":"The price array. Each element corresponds to a specific                   name length; names longer than the length of the array                   default to the price of the last element."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"runtime_bytecode":{"bytecode":"0x608060405234801561001057600080fd5b50600436106100885760003560e01c80637adbf9731161005b5780637adbf973146102325780638da5cb5b146102765780638f32d59b146102c0578063f2fde38b146102e257610088565b806306d5d0b61461008d57806350e9a715146100cf578063715018a61461017057806379cf92d31461017a575b600080fd5b6100b9600480360360208110156100a357600080fd5b8101908080359060200190929190505050610326565b6040518082815260200191505060405180910390f35b61015a600480360360608110156100e557600080fd5b810190808035906020019064010000000081111561010257600080fd5b82018360208201111561011457600080fd5b8035906020019184600183028401116401000000008311171561013657600080fd5b90919293919293908035906020019092919080359060200190929190505050610347565b6040518082815260200191505060405180910390f35b6101786104d1565b005b6102306004803603602081101561019057600080fd5b81019080803590602001906401000000008111156101ad57600080fd5b8201836020820111156101bf57600080fd5b803590602001918460208302840111640100000000831117156101e157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929050505061060a565b005b6102746004803603602081101561024857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610716565b005b61027e610837565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102c8610860565b604051808215151515815260200191505060405180910390f35b610324600480360360208110156102f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108b7565b005b6002818154811061033357fe5b906000526020600020016000915090505481565b60008061039786868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061093d565b90506002805490508111156103af5760028054905090505b600081116103bc57600080fd5b60006103eb84600260018503815481106103d257fe5b9060005260206000200154610ab390919063ffffffff16565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166357de26a46040518163ffffffff1660e01b815260040160206040518083038186803b15801561045757600080fd5b505afa15801561046b573d6000803e3d6000fd5b505050506040513d602081101561048157600080fd5b810190808051906020019092919050505060001c90506104c4816104b6670de0b6b3a764000085610ab390919063ffffffff16565b610aed90919063ffffffff16565b9350505050949350505050565b6104d9610860565b61054b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610612610860565b610684576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b806002908051906020019061069a929190610c57565b507f73422d94aedd596c2d4d39f27a01033adc390a9054efaf259afefd95ef7331df816040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107005780820151818401526020810190506106e5565b505050509050019250505060405180910390a150565b61071e610860565b610790576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0e05ae75e8b926552cf6fcd744d19f422561e3ced1e426868730852702dbe41881604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6108bf610860565b610931576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61093a81610b13565b50565b6000806000809050600084519050600092505b80821015610aa857600085838151811061096657fe5b602001015160f81c60f81b9050608060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610156109ac57600183019250610a9a565b60e060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610156109e557600283019250610a99565b60f060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610a1e57600383019250610a98565b60f8801b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610a5657600483019250610a97565b60fc60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015610a8f57600583019250610a96565b6006830192505b5b5b5b5b508280600101935050610950565b829350505050919050565b600080831415610ac65760009050610ae7565b6000828402905082848281610ad757fe5b0414610ae257600080fd5b809150505b92915050565b6000808211610afb57600080fd5b6000828481610b0657fe5b0490508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610cca6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054828255906000526020600020908101928215610c93579160200282015b82811115610c92578251825591602001919060010190610c77565b5b509050610ca09190610ca4565b5090565b610cc691905b80821115610cc2576000816000905550600101610caa565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a723058204dfada189ea8b432fc4371863ed68e474225d3d2a504a79687c973dbac16c7c164736f6c634300050a0032"}},"StringUtils":{"abi":[],"compiler":{"name":"solc","settings":{"optimize":false},"version":"0.5.10+commit.5a6ea5b1"},"deployment_bytecode":{"bytecode":"0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7230582023c165cab6266729b3d4a0953e65a683f11bb3b6daf5a5586be4e602f4f22d3f64736f6c634300050a0032"},"natspec":{"methods":{}},"runtime_bytecode":{"bytecode":"0x73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7230582023c165cab6266729b3d4a0953e65a683f11bb3b6daf5a5586be4e602f4f22d3f64736f6c634300050a0032"}}},"deployments":{"blockchain://d4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3/block/1d50da2d679553df155e7a22ff520306f96632ec12de0fa0e8f6cf5afea97a3a":{"BaseRegistrarImplementation":{"address":"0xFaC7BEA255a6990f749363002136aF6556b31e04","block":"0x13f6d811036d1e58b81e090eba4636e669e709914fc6cf4310899b9f8fbd6f4f","contract_type":"BaseRegistrarImplementation","transaction":"0xf94460056ab31044caf31b5f6b7ac0652d621d0049d350d1c26e44a98f993688"}}},"manifest_version":"2","meta":{"authors":["ens"],"description":"Implements an ENS registrar intended for the .eth TLD. August 30, 2019.","keywords":["ens"," solidity"],"license":"BSD 2-Clause \"Simplified\" License","links":{"documentation":"https://docs.ens.domains","repo":"https://github.com/ensdomains/ethregistrar","website":"https://ens.domains"}},"package_name":"ethregistrar","sources":{"./BaseRegistrar.sol":"pragma solidity >=0.4.24;\n\nimport \"@ensdomains/ens/contracts/ENS.sol\";\nimport \"@ensdomains/ens/contracts/Registrar.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\ncontract BaseRegistrar is IERC721, Ownable {\n    uint constant public GRACE_PERIOD = 90 days;\n\n    event ControllerAdded(address indexed controller);\n    event ControllerRemoved(address indexed controller);\n    event NameMigrated(uint256 indexed id, address indexed owner, uint expires);\n    event NameRegistered(uint256 indexed id, address indexed owner, uint expires);\n    event NameRenewed(uint256 indexed id, uint expires);\n\n    // Expiration timestamp for migrated domains.\n    uint public transferPeriodEnds;\n\n    // The ENS registry\n    ENS public ens;\n\n    // The namehash of the TLD this registrar owns (eg, .eth)\n    bytes32 public baseNode;\n\n    // The interim registrar\n    Registrar public previousRegistrar;\n\n    // A map of addresses that are authorised to register and renew names.\n    mapping(address=>bool) public controllers;\n\n    // Authorises a controller, who can register and renew domains.\n    function addController(address controller) external;\n\n    // Revoke controller permission for an address.\n    function removeController(address controller) external;\n\n    // Set the resolver for the TLD this registrar manages.\n    function setResolver(address resolver) external;\n\n    // Returns the expiration timestamp of the specified label hash.\n    function nameExpires(uint256 id) external view returns(uint);\n\n    // Returns true iff the specified name is available for registration.\n    function available(uint256 id) public view returns(bool);\n\n    /**\n     * @dev Register a name.\n     */\n    function register(uint256 id, address owner, uint duration) external returns(uint);\n\n    function renew(uint256 id, uint duration) external returns(uint);\n\n    /**\n     * @dev Reclaim ownership of a name in ENS, if you own it in the registrar.\n     */\n    function reclaim(uint256 id, address owner) external;\n\n    /**\n     * @dev Transfers a registration from the initial registrar.\n     * This function is called by the initial registrar when a user calls `transferRegistrars`.\n     */\n    function acceptRegistrarTransfer(bytes32 label, Deed deed, uint) external;\n}","./BaseRegistrarImplementation.sol":"pragma solidity ^0.5.0;\n\nimport \"@ensdomains/ens/contracts/ENS.sol\";\nimport \"@ensdomains/ens/contracts/Registrar.sol\";\nimport \"@ensdomains/ens/contracts/HashRegistrar.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\";\nimport \"./BaseRegistrar.sol\";\n\ncontract BaseRegistrarImplementation is BaseRegistrar, ERC721 {\n    // A map of expiry times\n    mapping(uint256=>uint) expiries;\n\n    uint constant public MIGRATION_LOCK_PERIOD = 28 days;\n\n    bytes4 constant private INTERFACE_META_ID = bytes4(keccak256(\"supportsInterface(bytes4)\"));\n    bytes4 constant private ERC721_ID = bytes4(\n        keccak256(\"balanceOf(uint256)\") ^\n        keccak256(\"ownerOf(uint256)\") ^\n        keccak256(\"approve(address,uint256)\") ^\n        keccak256(\"getApproved(uint256)\") ^\n        keccak256(\"setApprovalForAll(address,bool)\") ^\n        keccak256(\"isApprovedForAll(address,address)\") ^\n        keccak256(\"transferFrom(address,address,uint256)\") ^\n        keccak256(\"safeTransferFrom(address,address,uint256)\") ^\n        keccak256(\"safeTransferFrom(address,address,uint256,bytes)\")\n    );\n    bytes4 constant private RECLAIM_ID = bytes4(keccak256(\"reclaim(uint256,address)\"));\n\n    constructor(ENS _ens, HashRegistrar _previousRegistrar, bytes32 _baseNode, uint _transferPeriodEnds) public {\n        // Require that people have time to transfer names over.\n        require(_transferPeriodEnds > now + 2 * MIGRATION_LOCK_PERIOD);\n\n        ens = _ens;\n        baseNode = _baseNode;\n        previousRegistrar = _previousRegistrar;\n        transferPeriodEnds = _transferPeriodEnds;\n    }\n\n    modifier live {\n        require(ens.owner(baseNode) == address(this));\n        _;\n    }\n\n    modifier onlyController {\n        require(controllers[msg.sender]);\n        _;\n    }\n\n    /**\n     * @dev Gets the owner of the specified token ID. Names become unowned\n     *      when their registration expires.\n     * @param tokenId uint256 ID of the token to query the owner of\n     * @return address currently marked as the owner of the given token ID\n     */\n    function ownerOf(uint256 tokenId) public view returns (address) {\n        require(expiries[tokenId] > now);\n        return super.ownerOf(tokenId);\n    }\n\n    // Authorises a controller, who can register and renew domains.\n    function addController(address controller) external onlyOwner {\n        controllers[controller] = true;\n        emit ControllerAdded(controller);\n    }\n\n    // Revoke controller permission for an address.\n    function removeController(address controller) external onlyOwner {\n        controllers[controller] = false;\n        emit ControllerRemoved(controller);\n    }\n\n    // Set the resolver for the TLD this registrar manages.\n    function setResolver(address resolver) external onlyOwner {\n        ens.setResolver(baseNode, resolver);\n    }\n\n    // Returns the expiration timestamp of the specified id.\n    function nameExpires(uint256 id) external view returns(uint) {\n        return expiries[id];\n    }\n\n    // Returns true iff the specified name is available for registration.\n    function available(uint256 id) public view returns(bool) {\n        // Not available if it's registered here or in its grace period.\n        if(expiries[id] + GRACE_PERIOD >= now) {\n            return false;\n        }\n        // Available if we're past the transfer period, or the name isn't\n        // registered in the legacy registrar.\n        return now > transferPeriodEnds || previousRegistrar.state(bytes32(id)) == Registrar.Mode.Open;\n    }\n\n    /**\n     * @dev Register a name.\n     */\n    function register(uint256 id, address owner, uint duration) external live onlyController returns(uint) {\n        require(available(id));\n        require(now + duration + GRACE_PERIOD > now + GRACE_PERIOD); // Prevent future overflow\n\n        expiries[id] = now + duration;\n        if(_exists(id)) {\n            // Name was previously owned, and expired\n            _burn(id);\n        }\n        _mint(owner, id);\n        ens.setSubnodeOwner(baseNode, bytes32(id), owner);\n\n        emit NameRegistered(id, owner, now + duration);\n\n        return now + duration;\n    }\n\n    function renew(uint256 id, uint duration) external live onlyController returns(uint) {\n        require(expiries[id] + GRACE_PERIOD >= now); // Name must be registered here or in grace period\n        require(expiries[id] + duration + GRACE_PERIOD > duration + GRACE_PERIOD); // Prevent future overflow\n\n        expiries[id] += duration;\n        emit NameRenewed(id, expiries[id]);\n        return expiries[id];\n    }\n\n    /**\n     * @dev Reclaim ownership of a name in ENS, if you own it in the registrar.\n     */\n    function reclaim(uint256 id, address owner) external live {\n        require(_isApprovedOrOwner(msg.sender, id));\n        ens.setSubnodeOwner(baseNode, bytes32(id), owner);\n    }\n\n    /**\n     * @dev Transfers a registration from the initial registrar.\n     * This function is called by the initial registrar when a user calls `transferRegistrars`.\n     */\n    function acceptRegistrarTransfer(bytes32 label, Deed deed, uint) external live {\n        uint256 id = uint256(label);\n\n        require(msg.sender == address(previousRegistrar));\n        require(expiries[id] == 0);\n        require(transferPeriodEnds > now);\n\n        uint registrationDate;\n        (,,registrationDate,,) = previousRegistrar.entries(label);\n        require(registrationDate < now - MIGRATION_LOCK_PERIOD);\n\n        address owner = deed.owner();\n\n        // Destroy the deed and transfer the funds back to the registrant.\n        deed.closeDeed(1000);\n\n        // Register the name\n        expiries[id] = transferPeriodEnds;\n        _mint(owner, id);\n\n        ens.setSubnodeOwner(baseNode, label, owner);\n\n        emit NameMigrated(id, owner, transferPeriodEnds);\n        emit NameRegistered(id, owner, transferPeriodEnds);\n    }\n\n    function supportsInterface(bytes4 interfaceID) external view returns (bool) {\n        return interfaceID == INTERFACE_META_ID ||\n               interfaceID == ERC721_ID ||\n               interfaceID == RECLAIM_ID;\n    }\n}","./DummyOracle.sol":"pragma solidity >=0.4.24;\n\ncontract DummyOracle {\n    uint value;\n\n    constructor(uint _value) public {\n        set(_value);\n    }\n\n    function set(uint _value) public {\n        value = _value;\n    }\n\n    function read() external view returns (bytes32) {\n        return bytes32(value);\n    }\n}","./ETHRegistrarController.sol":"pragma solidity ^0.5.0;\n\nimport \"./PriceOracle.sol\";\nimport \"./BaseRegistrar.sol\";\nimport \"./StringUtils.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n/**\n * @dev A registrar controller for registering and renewing names at fixed cost.\n */\ncontract ETHRegistrarController is Ownable {\n    using StringUtils for *;\n\n    uint constant public MIN_REGISTRATION_DURATION = 28 days;\n\n    bytes4 constant private INTERFACE_META_ID = bytes4(keccak256(\"supportsInterface(bytes4)\"));\n    bytes4 constant private COMMITMENT_CONTROLLER_ID = bytes4(\n        keccak256(\"rentPrice(string,uint256)\") ^\n        keccak256(\"available(string)\") ^\n        keccak256(\"makeCommitment(string,address,bytes32)\") ^\n        keccak256(\"commit(bytes32)\") ^\n        keccak256(\"register(string,address,uint256,bytes32)\") ^\n        keccak256(\"renew(string,uint256)\")\n    );\n\n    BaseRegistrar base;\n    PriceOracle prices;\n    uint public minCommitmentAge;\n    uint public maxCommitmentAge;\n\n    mapping(bytes32=>uint) public commitments;\n\n    event NameRegistered(string name, bytes32 indexed label, address indexed owner, uint cost, uint expires);\n    event NameRenewed(string name, bytes32 indexed label, uint cost, uint expires);\n    event NewPriceOracle(address indexed oracle);\n\n    constructor(BaseRegistrar _base, PriceOracle _prices, uint _minCommitmentAge, uint _maxCommitmentAge) public {\n        require(_maxCommitmentAge > _minCommitmentAge);\n\n        base = _base;\n        prices = _prices;\n        minCommitmentAge = _minCommitmentAge;\n        maxCommitmentAge = _maxCommitmentAge;\n    }\n\n    function rentPrice(string memory name, uint duration) view public returns(uint) {\n        bytes32 hash = keccak256(bytes(name));\n        return prices.price(name, base.nameExpires(uint256(hash)), duration);\n    }\n\n    function valid(string memory name) public view returns(bool) {\n        return name.strlen() > 6;\n    }\n\n    function available(string memory name) public view returns(bool) {\n        bytes32 label = keccak256(bytes(name));\n        return valid(name) && base.available(uint256(label));\n    }\n\n    function makeCommitment(string memory name, address owner, bytes32 secret) pure public returns(bytes32) {\n        bytes32 label = keccak256(bytes(name));\n        return keccak256(abi.encodePacked(label, owner, secret));\n    }\n\n    function commit(bytes32 commitment) public {\n        require(commitments[commitment] + maxCommitmentAge < now);\n        commitments[commitment] = now;\n    }\n\n    function register(string calldata name, address owner, uint duration, bytes32 secret) external payable {\n        // Require a valid commitment\n        bytes32 commitment = makeCommitment(name, owner, secret);\n        require(commitments[commitment] + minCommitmentAge <= now);\n\n        // If the commitment is too old, or the name is registered, stop\n        require(commitments[commitment] + maxCommitmentAge > now);\n        require(available(name));\n\n        delete(commitments[commitment]);\n\n        uint cost = rentPrice(name, duration);\n        require(duration >= MIN_REGISTRATION_DURATION);\n        require(msg.value >= cost);\n\n        bytes32 label = keccak256(bytes(name));\n        uint expires = base.register(uint256(label), owner, duration);\n        emit NameRegistered(name, label, owner, cost, expires);\n\n        if(msg.value > cost) {\n            msg.sender.transfer(msg.value - cost);\n        }\n    }\n\n    function renew(string calldata name, uint duration) external payable {\n        uint cost = rentPrice(name, duration);\n        require(msg.value >= cost);\n\n        bytes32 label = keccak256(bytes(name));\n        uint expires = base.renew(uint256(label), duration);\n\n        if(msg.value > cost) {\n            msg.sender.transfer(msg.value - cost);\n        }\n\n        emit NameRenewed(name, label, cost, expires);\n    }\n\n    function setPriceOracle(PriceOracle _prices) public onlyOwner {\n        prices = _prices;\n        emit NewPriceOracle(address(prices));\n    }\n\n    function setCommitmentAges(uint _minCommitmentAge, uint _maxCommitmentAge) public onlyOwner {\n        minCommitmentAge = _minCommitmentAge;\n        maxCommitmentAge = _maxCommitmentAge;\n    }\n\n    function withdraw() public onlyOwner {\n        msg.sender.transfer(address(this).balance);\n    }\n\n    function supportsInterface(bytes4 interfaceID) external pure returns (bool) {\n        return interfaceID == INTERFACE_META_ID ||\n               interfaceID == COMMITMENT_CONTROLLER_ID;\n    }\n}","./PriceOracle.sol":"pragma solidity >=0.4.24;\n\ninterface PriceOracle {\n    /**\n     * @dev Returns the price to register or renew a name.\n     * @param name The name being registered or renewed.\n     * @param expires When the name presently expires (0 if this is a new registration).\n     * @param duration How long the name is being registered or extended for, in seconds.\n     * @return The price of this renewal or registration, in wei.\n     */\n    function price(string calldata name, uint expires, uint duration) external view returns(uint);\n}","./ShortNameAuctionController.sol":"pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"./BaseRegistrar.sol\";\nimport \"./StringUtils.sol\";\n\ninterface ProxyRegistry {\n    function proxies(address owner) external view returns(address);\n}\n\ncontract ShortNameAuctionController is Ownable {\n    using StringUtils for *;\n\n    uint constant public REGISTRATION_PERIOD = 31536000;\n\n    event NameRegistered(string name, address owner);\n\n    BaseRegistrar public base;\n    ProxyRegistry public proxies;\n    address public opensea;\n\n    modifier onlyOpensea {\n        require(msg.sender == opensea || msg.sender == proxies.proxies(opensea));\n        _;\n    }\n\n    constructor(BaseRegistrar _base, ProxyRegistry _proxies, address _opensea) public {\n        base = _base;\n        proxies = _proxies;\n        opensea = _opensea;\n    }\n\n    function valid(string memory name) public view returns(bool) {\n        uint len = name.strlen();\n        return len >= 3 && len <= 6;\n    }\n\n    function available(string memory name) public view returns(bool) {\n        return valid(name) && base.available(getTokenId(name));\n    }\n\n    function register(string calldata name, address owner) external onlyOpensea {\n        require(available(name));\n        base.register(getTokenId(name), owner, REGISTRATION_PERIOD);\n        emit NameRegistered(name, owner);\n    }\n\n    function setOpensea(address _opensea) external onlyOwner {\n        opensea = _opensea;\n    }\n\n    function getTokenId(string memory name) internal pure returns(uint256) {\n        return uint256(keccak256(bytes(name)));\n    }\n}","./ShortNameClaims.sol":"pragma solidity ^0.5.0;\n\nimport \"./BaseRegistrar.sol\";\nimport \"./StringUtils.sol\";\nimport \"./PriceOracle.sol\";\n\nimport \"@ensdomains/buffer/contracts/Buffer.sol\";\nimport \"@ensdomains/dnssec-oracle/contracts/BytesUtils.sol\";\nimport \"openzeppelin-solidity/contracts/access/Roles.sol\";\n\n/**\n * @dev ShortNameClaims is a contract that permits people to register claims\n *      for short (3-6 character) ENS names ahead of the auction process.\n *\n *      Anyone with a DNS name registered before January 1, 2019, may use this\n *      name to support a claim for a matching ENS name. In the event that\n *      multiple claimants request the same name, the name will be assigned to\n *      the oldest registered DNS name.\n *\n *      Claims may be submitted by calling `submitExactClaim`,\n *      `submitCombinedClaim` or `submitPrefixClaim` as appropriate.\n *\n *      Claims require lodging a deposit equivalent to 365 days' registration of\n *      the name. If the claim is approved, this deposit is spent, and the name\n *      is registered for the claimant for 365 days. If the claim is declined,\n *      the deposit will be returned.\n */\ncontract ShortNameClaims {\n    using Roles for Roles.Role;\n\n    uint constant public REGISTRATION_PERIOD = 31536000;\n\n    using Buffer for Buffer.buffer;\n    using BytesUtils for bytes;\n    using StringUtils for string;\n\n    enum Phase {\n        OPEN,\n        REVIEW,\n        FINAL\n    }\n\n    enum Status {\n        PENDING,\n        APPROVED,\n        DECLINED,\n        WITHDRAWN\n    }\n\n    struct Claim {\n        bytes32 labelHash;\n        address claimant;\n        uint paid;\n        Status status;\n    }\n\n    Roles.Role owners;\n    Roles.Role ratifiers;\n\n    PriceOracle public priceOracle;\n    BaseRegistrar public registrar;\n    mapping(bytes32=>Claim) public claims;\n    mapping(bytes32=>bool) approvedNames;\n    uint public pendingClaims;\n    uint public unresolvedClaims;\n    Phase public phase;\n\n    event ClaimSubmitted(string claimed, bytes dnsname, uint paid, address claimant, string email);\n    event ClaimStatusChanged(bytes32 indexed claimId, Status status);\n\n    constructor(PriceOracle _priceOracle, BaseRegistrar _registrar, address _ratifier) public {\n        priceOracle = _priceOracle;\n        registrar = _registrar;\n        phase = Phase.OPEN;\n\n        owners.add(msg.sender);\n        ratifiers.add(_ratifier);\n    }\n\n    modifier onlyOwner() {\n        require(owners.has(msg.sender), \"Caller must be an owner\");\n        _;\n    }\n\n    modifier onlyRatifier() {\n        require(ratifiers.has(msg.sender), \"Caller must be a ratifier\");\n        _;\n    }\n\n    modifier inPhase(Phase p) {\n        require(phase == p, \"Not in required phase\");\n        _;\n    }\n\n    function addOwner(address owner) external onlyOwner {\n        owners.add(owner);\n    }\n\n    function removeOwner(address owner) external onlyOwner {\n        owners.remove(owner);\n    }\n\n    function addRatifier(address ratifier) external onlyRatifier {\n        ratifiers.add(ratifier);\n    }\n\n    function removeRatifier(address ratifier) external onlyRatifier {\n        ratifiers.remove(ratifier);\n    }\n\n    /**\n     * @dev Computes the claim ID for a submitted claim, so it can be looked up\n     *      using `claims`.\n     * @param claimed The name being claimed (eg, 'foo')\n     * @param dnsname The DNS-encoded name supporting the claim (eg, 'foo.test')\n     * @param claimant The address making the claim.\n     * @return The claim ID.\n     */\n    function computeClaimId(string memory claimed, bytes memory dnsname, address claimant, string memory email) public pure returns(bytes32) {\n        return keccak256(abi.encodePacked(keccak256(bytes(claimed)), keccak256(dnsname), claimant, keccak256(bytes(email))));\n    }\n\n    /**\n     * @dev Returns the cost associated with placing a claim.\n     * @param claimed The name being claimed.\n     * @return The cost in wei for this claim.\n     */\n    function getClaimCost(string memory claimed) public view returns(uint) {\n        return priceOracle.price(claimed, 0, REGISTRATION_PERIOD);\n    }\n\n    /**\n     * @dev Submits a claim for an exact match (eg, foo.test -> foo.eth).\n     *      Claimants must provide an amount of ether equal to 365 days'\n     *      registration cost; call `getClaimCost` to determine this amount.\n     *      Claimants should supply a little extra in case of variation in price;\n     *      any excess will be returned to the sender.\n     * @param name The DNS-encoded name of the domain being used to support the\n     *             claim.\n     * @param claimant The address of the claimant.\n     * @param email An email address for correspondence regarding the claim.\n     */\n    function submitExactClaim(bytes memory name, address claimant, string memory email) public payable {\n        string memory claimed = getLabel(name, 0);\n        handleClaim(claimed, name, claimant, email);\n    }\n\n    /**\n     * @dev Submits a claim for match on name+tld (eg, foo.tv -> footv).\n     *      Claimants must provide an amount of ether equal to 365 days'\n     *      registration cost; call `getClaimCost` to determine this amount.\n     *      Claimants should supply a little extra in case of variation in price;\n     *      any excess will be returned to the sender.\n     * @param name The DNS-encoded name of the domain being used to support the\n     *             claim.\n     * @param claimant The address of the claimant.\n     * @param email An email address for correspondence regarding the claim.\n     */\n    function submitCombinedClaim(bytes memory name, address claimant, string memory email) public payable {\n        bytes memory firstLabel = bytes(getLabel(name, 0));\n        bytes memory secondLabel = bytes(getLabel(name, 1));\n        Buffer.buffer memory buf;\n        buf.init(firstLabel.length + secondLabel.length);\n        buf.append(firstLabel);\n        buf.append(secondLabel);\n\n        handleClaim(string(buf.buf), name, claimant, email);\n    }\n\n    /**\n     * @dev Submits a claim for prefix match (eg, fooeth.test -> foo.eth).\n     *      Claimants must provide an amount of ether equal to 365 days'\n     *      registration cost; call `getClaimCost` to determine this amount.\n     *      Claimants should supply a little extra in case of variation in price;\n     *      any excess will be returned to the sender.\n     * @param name The DNS-encoded name of the domain being used to support the\n     *             claim.\n     * @param claimant The address of the claimant.\n     * @param email An email address for correspondence regarding the claim.\n     */\n    function submitPrefixClaim(bytes memory name, address claimant, string memory email) public payable {\n        bytes memory firstLabel = bytes(getLabel(name, 0));\n        require(firstLabel.equals(firstLabel.length - 3, bytes(\"eth\")));\n        handleClaim(string(firstLabel.substring(0, firstLabel.length - 3)), name, claimant, email);\n    }\n\n    /**\n     * @dev Closes the claim submission period.\n     *      Callable only by the owner.\n     */\n    function closeClaims() external onlyOwner inPhase(Phase.OPEN) {\n        phase = Phase.REVIEW;\n    }\n\n    /**\n     * @dev Ratifies the current set of claims.\n     *      Ratification freezes the claims and their resolutions, and permits\n     *      them to be acted on.\n     */\n    function ratifyClaims() external onlyRatifier inPhase(Phase.REVIEW) {\n        // Can't ratify until all claims have a resolution.\n        require(pendingClaims == 0);\n        phase = Phase.FINAL;\n    }\n\n    /**\n     * @dev Cleans up the contract, after all claims are resolved.\n     *      Callable only by the owner, and only in final state.\n     */\n    function destroy() external onlyOwner inPhase(Phase.FINAL) {\n        require(unresolvedClaims == 0);\n        selfdestruct(toPayable(msg.sender));\n    }\n\n    /**\n     * @dev Sets the status of a claim to either APPROVED or DECLINED.\n     *      Callable only during the review phase, and only by the owner or\n     *      ratifier.\n     * @param claimId The claim to set the status of.\n     * @param approved True if the claim is approved, false if it is declined.\n     */\n    function setClaimStatus(bytes32 claimId, bool approved) public inPhase(Phase.REVIEW) {\n        // Only callable by owner or ratifier\n        require(owners.has(msg.sender) || ratifiers.has(msg.sender));\n\n        Claim memory claim = claims[claimId];\n        require(claim.paid > 0, \"Claim not found\");\n\n        if(claim.status == Status.PENDING) {\n          // Claim went from pending -> approved/declined; update counters\n          pendingClaims--;\n          unresolvedClaims++;\n        } else if(claim.status == Status.APPROVED) {\n          // Claim was previously approved; remove from approved map\n          approvedNames[claim.labelHash] = false;\n        }\n\n        // Claim was just approved; check the name was not already used, and add\n        // to approved map\n        if(approved) {\n          require(!approvedNames[claim.labelHash]);\n          approvedNames[claim.labelHash] = true;\n        }\n\n        Status status = approved?Status.APPROVED:Status.DECLINED;\n        claims[claimId].status = status;\n        emit ClaimStatusChanged(claimId, status);\n    }\n\n    /**\n     * @dev Sets the status of multiple claims. Callable only during the review\n     *      phase, and only by the owner or ratifier.\n     * @param approved A list of approved claim IDs.\n     * @param declined A list of declined claim IDs.\n     */\n    function setClaimStatuses(bytes32[] calldata approved, bytes32[] calldata declined) external {\n        for(uint i = 0; i < approved.length; i++) {\n            setClaimStatus(approved[i], true);\n        }\n        for(uint i = 0; i < declined.length; i++) {\n            setClaimStatus(declined[i], false);\n        }\n    }\n\n    /**\n     * @dev Resolves a claim. Callable by anyone, only in the final phase.\n     *      Resolving a claim either registers the name or refunds the claimant.\n     * @param claimId The claim ID to resolve.\n     */\n    function resolveClaim(bytes32 claimId) public inPhase(Phase.FINAL) {\n        Claim memory claim = claims[claimId];\n        require(claim.paid > 0, \"Claim not found\");\n\n        if(claim.status == Status.APPROVED) {\n            registrar.register(uint256(claim.labelHash), claim.claimant, REGISTRATION_PERIOD);\n            toPayable(registrar.owner()).transfer(claim.paid);\n        } else if(claim.status == Status.DECLINED) {\n            toPayable(claim.claimant).transfer(claim.paid);\n        } else {\n            // It should not be possible to get to FINAL with claim IDs that are\n            // not either APPROVED or DECLINED.\n            assert(false);\n        }\n\n        unresolvedClaims--;\n        delete claims[claimId];\n    }\n\n    /**\n     * @dev Resolves multiple claims. Callable by anyone, only in the final phase.\n     * @param claimIds A list of claim IDs to resolve.\n     */\n    function resolveClaims(bytes32[] calldata claimIds) external {\n        for(uint i = 0; i < claimIds.length; i++) {\n            resolveClaim(claimIds[i]);\n        }\n    }\n\n    /**\n     * @dev Withdraws a claim and refunds the claimant.\n     *      Callable only by the claimant, at any time.\n     * @param claimId The ID of the claim to withdraw.\n     */\n    function withdrawClaim(bytes32 claimId) external {\n        Claim memory claim = claims[claimId];\n\n        // Only callable by claimant\n        require(msg.sender == claim.claimant);\n\n        if(claim.status == Status.PENDING) {\n            pendingClaims--;\n        } else {\n            unresolvedClaims--;\n        }\n\n        toPayable(claim.claimant).transfer(claim.paid);\n        emit ClaimStatusChanged(claimId, Status.WITHDRAWN);\n        delete claims[claimId];\n    }\n\n    function handleClaim(string memory claimed, bytes memory name, address claimant, string memory email) internal inPhase(Phase.OPEN) {\n        uint len = claimed.strlen();\n        require(len >= 3 && len <= 6);\n\n        bytes32 claimId = computeClaimId(claimed, name, claimant, email);\n        require(claims[claimId].paid == 0, \"Claim already submitted\");\n\n        // Require that there are at most two labels (name.tld)\n        require(bytes(getLabel(name, 2)).length == 0, \"Name must be a 2LD\");\n\n        uint price = getClaimCost(claimed);\n        require(msg.value >= price, \"Insufficient funds for reservation\");\n        if(msg.value > price) {\n            msg.sender.transfer(msg.value - price);\n        }\n\n        claims[claimId] = Claim(keccak256(bytes(claimed)), claimant, price, Status.PENDING);\n        pendingClaims++;\n        emit ClaimSubmitted(claimed, name, price, claimant, email);\n    }\n\n    function getLabel(bytes memory name, uint idx) internal pure returns(string memory) {\n        // Skip the first `idx` labels\n        uint offset = 0;\n        for(uint i = 0; i < idx; i++) {\n            if(offset >= name.length) return \"\";\n            offset += name.readUint8(offset) + 1;\n        }\n\n        // Read the label we care about\n        if(offset >= name.length) return '';\n        uint len = name.readUint8(offset);\n        return string(name.substring(offset + 1, len));\n    }\n\n    function toPayable(address addr) internal pure returns(address payable) {\n        return address(uint160(addr));\n    }\n}","./SimplePriceOracle.sol":"pragma solidity ^0.5.0;\n\nimport \"./PriceOracle.sol\";\nimport \"./SafeMath.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\ncontract SimplePriceOracle is Ownable, PriceOracle {\n    using SafeMath for *;\n\n    // Rent in wei per second\n    uint public rentPrice;\n\n    event RentPriceChanged(uint price);\n\n    constructor(uint _rentPrice) public {\n        setPrice(_rentPrice);\n    }\n\n    function setPrice(uint _rentPrice) public onlyOwner {\n        rentPrice = _rentPrice;\n        emit RentPriceChanged(_rentPrice);\n    }\n\n    /**\n     * @dev Returns the price to register or renew a name.\n     * @param duration How long the name is being registered or extended for, in seconds.\n     * @return The price of this renewal or registration, in wei.\n     */\n    function price(string calldata /*name*/, uint /*expires*/, uint duration) external view returns(uint) {\n        return duration.mul(rentPrice);\n    }\n}","./StablePriceOracle.sol":"pragma solidity ^0.5.0;\n\nimport \"./PriceOracle.sol\";\nimport \"./SafeMath.sol\";\nimport \"./StringUtils.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\ninterface DSValue {\n    function read() external view returns (bytes32);\n}\n\n// StablePriceOracle sets a price in USD, based on an oracle.\ncontract StablePriceOracle is Ownable, PriceOracle {\n    using SafeMath for *;\n    using StringUtils for *;\n\n    // Oracle address\n    DSValue usdOracle;\n\n    // Rent in attodollars (1e-18) per second\n    uint[] public rentPrices;\n\n    event OracleChanged(address oracle);\n    event RentPriceChanged(uint[] prices);\n\n    constructor(DSValue _usdOracle, uint[] memory _rentPrices) public {\n        setOracle(_usdOracle);\n        setPrices(_rentPrices);\n    }\n\n    /**\n     * @dev Sets the price oracle address\n     * @param _usdOracle The address of the price oracle to use.\n     */\n    function setOracle(DSValue _usdOracle) public onlyOwner {\n        usdOracle = _usdOracle;\n        emit OracleChanged(address(_usdOracle));\n    }\n\n    /**\n     * @dev Sets rent prices.\n     * @param _rentPrices The price array. Each element corresponds to a specific\n     *                    name length; names longer than the length of the array\n     *                    default to the price of the last element.\n     */\n    function setPrices(uint[] memory _rentPrices) public onlyOwner {\n        rentPrices = _rentPrices;\n        emit RentPriceChanged(_rentPrices);\n    }\n\n    /**\n     * @dev Returns the price to register or renew a name.\n     * @param name The name being registered or renewed.\n     * @param duration How long the name is being registered or extended for, in seconds.\n     * @return The price of this renewal or registration, in wei.\n     */\n    function price(string calldata name, uint /*expires*/, uint duration) view external returns(uint) {\n        uint len = name.strlen();\n        if(len > rentPrices.length) {\n            len = rentPrices.length;\n        }\n        require(len > 0);\n        uint priceUSD = rentPrices[len - 1].mul(duration);\n\n        // Price of one ether in attodollars\n        uint ethPrice = uint(usdOracle.read());\n\n        // priceUSD and ethPrice are both fixed-point values with 18dp, so we\n        // multiply the numerator by 1e18 before dividing.\n        return priceUSD.mul(1e18).div(ethPrice);\n    }\n}","./StringUtils.sol":"pragma solidity >=0.4.24;\n\nlibrary StringUtils {\n    /**\n     * @dev Returns the length of a given string\n     *\n     * @param s The string to measure the length of\n     * @return The length of the input string\n     */\n    function strlen(string memory s) internal pure returns (uint) {\n        uint len;\n        uint i = 0;\n        uint bytelength = bytes(s).length;\n        for(len = 0; i < bytelength; len++) {\n            byte b = bytes(s)[i];\n            if(b < 0x80) {\n                i += 1;\n            } else if (b < 0xE0) {\n                i += 2;\n            } else if (b < 0xF0) {\n                i += 3;\n            } else if (b < 0xF8) {\n                i += 4;\n            } else if (b < 0xFC) {\n                i += 5;\n            } else {\n                i += 6;\n            }\n        }\n        return len;\n    }\n}","./openzeppelin-solidity/contracts/math/SafeMath.sol":"pragma solidity ^0.5.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, \"SafeMath: division by zero\");\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n}"},"version":"1.0.0"}